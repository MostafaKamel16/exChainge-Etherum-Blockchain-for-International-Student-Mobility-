{"ast":null,"code":"import { getBalance, getCurrentAccount, minWeiBalance } from \"../services/blockchain/util\";\nimport { transferFund } from \"../services/blockchain/nodeCalls\";\nimport hash from \"object-hash\";\nexport const fundAccount = async () => {\n  const account = getCurrentAccount();\n  const balance = parseInt(await getBalance());\n\n  if (balance < minWeiBalance) {\n    await transferFund(account);\n  }\n};\nexport const hashTranscripts = transcripts => {\n  const data = transcripts.length === 1 ? transcripts[0] : transcripts;\n  return hash(data, {\n    unorderedArrays: true,\n    unorderedObjects: true,\n    respectType: false,\n    respectFunctionProperties: false,\n    respectFunctionNames: false,\n    excludeKeys: key => {\n      return key === '_id' || key === '_v' || key === 'index';\n    }\n  });\n};","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/src/utils/accountUtils.js"],"names":["getBalance","getCurrentAccount","minWeiBalance","transferFund","hash","fundAccount","account","balance","parseInt","hashTranscripts","transcripts","data","length","unorderedArrays","unorderedObjects","respectType","respectFunctionProperties","respectFunctionNames","excludeKeys","key"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,iBAArB,EAAwCC,aAAxC,QAA6D,6BAA7D;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAY;AACnC,QAAMC,OAAO,GAAGL,iBAAiB,EAAjC;AACA,QAAMM,OAAO,GAAGC,QAAQ,CAAC,MAAMR,UAAU,EAAjB,CAAxB;;AACA,MAAIO,OAAO,GAAGL,aAAd,EAA6B;AACzB,UAAMC,YAAY,CAACG,OAAD,CAAlB;AACH;AACJ,CANM;AAQP,OAAO,MAAMG,eAAe,GAAIC,WAAD,IAAiB;AAC5C,QAAMC,IAAI,GAAGD,WAAW,CAACE,MAAZ,KAAuB,CAAvB,GAA2BF,WAAW,CAAC,CAAD,CAAtC,GAA4CA,WAAzD;AACA,SAAON,IAAI,CAACO,IAAD,EAAO;AACdE,IAAAA,eAAe,EAAE,IADH;AACSC,IAAAA,gBAAgB,EAAE,IAD3B;AACiCC,IAAAA,WAAW,EAAE,KAD9C;AACqDC,IAAAA,yBAAyB,EAAE,KADhF;AAEdC,IAAAA,oBAAoB,EAAE,KAFR;AAEeC,IAAAA,WAAW,EAAGC,GAAD,IAAS;AAC/C,aAAOA,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,IAAzB,IAAiCA,GAAG,KAAK,OAAhD;AACH;AAJa,GAAP,CAAX;AAMH,CARM","sourcesContent":["import { getBalance, getCurrentAccount, minWeiBalance } from \"../services/blockchain/util\";\nimport { transferFund } from \"../services/blockchain/nodeCalls\";\nimport hash from \"object-hash\";\n\nexport const fundAccount = async () => {\n    const account = getCurrentAccount();\n    const balance = parseInt(await getBalance());\n    if (balance < minWeiBalance) {\n        await transferFund(account);\n    }\n};\n\nexport const hashTranscripts = (transcripts) => {\n    const data = transcripts.length === 1 ? transcripts[0] : transcripts;\n    return hash(data, {\n        unorderedArrays: true, unorderedObjects: true, respectType: false, respectFunctionProperties: false,\n        respectFunctionNames: false, excludeKeys: (key) => {\n            return key === '_id' || key === '_v' || key === 'index';\n        }\n    });\n};"]},"metadata":{},"sourceType":"module"}