{"ast":null,"code":"var _jsxFileName = \"/Users/bob/codes/mobility-blockchain-frontend/src/component/TranscriptStatus.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from '@mui/material/Card';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport { CardContent, CardHeader, CardMedia, Grid } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@mui/material/Typography';\nimport Grow from '@mui/material/Grow';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport StepConnector, { stepConnectorClasses } from '@mui/material/StepConnector';\nimport IosShareIcon from '@mui/icons-material/IosShare';\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\nimport MarkEmailReadIcon from '@mui/icons-material/MarkEmailRead';\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\nimport StepLabel from '@mui/material/StepLabel';\nimport Icon from '@material-ui/core/Icon';\nimport exchaingeLogo from \"../img/exchainge_logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1),\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  cardStyle: {\n    marginTop: '2rem',\n    textAlign: 'center',\n    padding: '1.5rem',\n    color: 'inherit',\n    display: 'block',\n    width: '85%',\n    transitionDuration: 'color 0.15s ease',\n    position: 'relative'\n  },\n  cardHeader: {\n    width: 'auto',\n    textAlign: 'center',\n    padding: '5px'\n  },\n  cardFooter: {\n    width: '80%',\n    textAlign: 'center',\n    padding: '1.25rem',\n    border: '0',\n    borderRadius: '6px',\n    justifyContent: 'center !important'\n  },\n  cardRow: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    \"&:last-child\": {\n      paddingBottom: theme.spacing(1)\n    },\n    \"&:first-child\": {\n      paddingTop: theme.spacing(0)\n    }\n  },\n  cardButtons: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"2rem\"\n  }\n}));\nconst ColorlibConnector = styled(StepConnector)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`&.${stepConnectorClasses.alternativeLabel}`]: {\n      top: 22\n    },\n    [`&.${stepConnectorClasses.active}`]: {\n      [`& .${stepConnectorClasses.line}`]: {\n        backgroundImage: 'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)' //'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n\n      }\n    },\n    [`&.${stepConnectorClasses.completed}`]: {\n      [`& .${stepConnectorClasses.line}`]: {\n        backgroundImage: 'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)' //'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n\n      }\n    },\n    [`& .${stepConnectorClasses.line}`]: {\n      height: 3,\n      border: 0,\n      backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n      borderRadius: 1\n    }\n  };\n});\nconst ColorlibStepIconRoot = styled('div')(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    ...(ownerState.active && {\n      backgroundImage: 'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)',\n      boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n    }),\n    ...(ownerState.completed && {\n      backgroundImage: 'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)' //'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n\n    })\n  };\n});\n\nfunction ColorlibStepIcon(props) {\n  const {\n    active,\n    completed,\n    className\n  } = props;\n  const icons = {\n    1: /*#__PURE__*/_jsxDEV(IosShareIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }, this),\n    2: /*#__PURE__*/_jsxDEV(DriveFileRenameOutlineIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 12\n    }, this),\n    3: /*#__PURE__*/_jsxDEV(MarkEmailReadIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }, this),\n    4: /*#__PURE__*/_jsxDEV(DoneAllIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 12\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(ColorlibStepIconRoot, {\n    ownerState: {\n      completed,\n      active\n    },\n    className: className,\n    children: icons[String(props.icon)]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ColorlibStepIcon;\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   * @default false\n   */\n  active: PropTypes.bool,\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   * @default false\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node\n};\n\nconst TranscriptStatus = props => {\n  _s();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const classes = useStyles();\n\n  const handleStep = step => () => {\n    setActiveStep(step);\n  };\n\n  const data = [[{\n    pic: '/letter-2742646_640.jpg',\n    title: 'Hash the transcripts',\n    body: 'The first step of the process begins when you choose a transcript to send, the system then takes the transcript and hashes'\n  }, {\n    pic: '/upload1.svg',\n    title: 'Upload the transcripts',\n    body: 'The hash of the transcripts is then sent to the blockchain while the original transcript is sent over to the university of your choice'\n  }], [{\n    pic: '/license-icon-2793454_640.png',\n    title: 'Smart Contracts',\n    body: 'These digital contracts ensure that your transcript hashes are stored in a very meticulous and safe fashion on the blockchain'\n  }, {\n    pic: '/pascal-bernardon-zt0HWquGXlQ-unsplash.jpg',\n    title: 'Writing to the Blockchain',\n    body: 'Once the interaction with the smart contract is successful, the transaction is written to the blockchain where it cannot be modified anymore'\n  }], [{\n    pic: '/paper-5419824_640.jpg',\n    title: 'Paperless',\n    body: 'The actual process of sending out the transcript to a foreign university now becomes 100% paperless'\n  }, {\n    pic: '/pexels-torsten-dettlaff-193003.jpg',\n    title: 'Recieved',\n    body: 'The foreign university gets the transcript in its system immediately after the transcript hash is stored in the blockchain'\n  }], [{\n    pic: '/blockchain-2853046_640.jpg',\n    title: 'Trusted',\n    body: 'The foreign exchange coordinator does not need to be worried about tampering of the transcripts anymore as the system ensures integrity of the transcript'\n  }, {\n    pic: '/stamp-1415724_640.jpg',\n    title: 'Easily Validated',\n    body: 'A received transcript can be validated easily by simply hashing it again and using the contract to see if the hash exists in on the blockchain'\n  }]];\n\n  const isStepOptional = step => {\n    return step === 1;\n  };\n\n  const showFooter = index => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: activeStep === index ? '' : 'none'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: \"1\",\n      alignItems: \"center\",\n      className: classes.cardRow + \" \" + classes.cardButtons,\n      children: [/*#__PURE__*/_jsxDEV(Grow, {\n        in: true,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            width: '35%',\n            marginRight: '2rem',\n            height: '45vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            alt: \"green iguana\",\n            height: \"140\",\n            image: data[index][0].pic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            collapseable: true,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"div\",\n              children: data[index][0].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"justify\",\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: data[index][0].body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grow, {\n        in: true,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            width: '35%',\n            marginLeft: '2rem',\n            height: '45vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            alt: \"green iguana\",\n            height: \"140\",\n            image: data[index][1].pic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"div\",\n              children: data[index][1].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"justify\",\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: data[index][1].body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n\n  const timeline = () => /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    className: classes.cardStyle,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      className: classes.cardHeader,\n      var: true,\n      title: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [\"How\", /*#__PURE__*/_jsxDEV(Icon, {\n          style: {\n            paddingLeft: 15,\n            paddingRight: 15\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            src: exchaingeLogo,\n            style: {\n              paddingUp: 100\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), \"works\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Stepper, {\n        alternativeLabel: true,\n        activeStep: activeStep,\n        connector: /*#__PURE__*/_jsxDEV(ColorlibConnector, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 78\n        }, this),\n        children: props.items.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n\n          if (isStepOptional(index)) {\n            labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: \"Optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(Step, {\n            onClick: handleStep(index),\n            ...stepProps,\n            children: /*#__PURE__*/_jsxDEV(StepLabel, {\n              StepIconComponent: ColorlibStepIcon,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"cardFooter\", {\n      children: [\" \", showFooter(activeStep), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: timeline()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TranscriptStatus, \"15B3wFBagZpDWIGbpCRxtmpeGyg=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = TranscriptStatus;\nexport default TranscriptStatus;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColorlibStepIcon\");\n$RefreshReg$(_c2, \"TranscriptStatus\");","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/src/component/TranscriptStatus.js"],"names":["React","Card","Stepper","Step","CardContent","CardHeader","CardMedia","Grid","makeStyles","Typography","Grow","PropTypes","styled","StepConnector","stepConnectorClasses","IosShareIcon","DriveFileRenameOutlineIcon","MarkEmailReadIcon","DoneAllIcon","StepLabel","Icon","useStyles","theme","root","display","flexWrap","margin","spacing","textField","cardStyle","marginTop","textAlign","padding","color","width","transitionDuration","position","cardHeader","cardFooter","border","borderRadius","justifyContent","cardRow","paddingTop","paddingBottom","cardButtons","ColorlibConnector","alternativeLabel","top","active","line","backgroundImage","completed","height","backgroundColor","palette","mode","grey","ColorlibStepIconRoot","ownerState","zIndex","alignItems","boxShadow","ColorlibStepIcon","props","className","icons","String","icon","propTypes","bool","string","node","TranscriptStatus","activeStep","setActiveStep","useState","classes","handleStep","step","data","pic","title","body","isStepOptional","showFooter","index","marginRight","marginLeft","timeline","paddingLeft","paddingRight","exchaingeLogo","paddingUp","items","map","label","stepProps","labelProps","optional"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from '@mui/material/Card';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport { CardContent, CardHeader, CardMedia, Grid } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@mui/material/Typography';\nimport Grow from '@mui/material/Grow';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport StepConnector, { stepConnectorClasses } from '@mui/material/StepConnector';\nimport IosShareIcon from '@mui/icons-material/IosShare';\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\nimport MarkEmailReadIcon from '@mui/icons-material/MarkEmailRead';\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\nimport StepLabel from '@mui/material/StepLabel';\nimport Icon from '@material-ui/core/Icon';\nimport exchaingeLogo from \"../img/exchainge_logo.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing(1),\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    cardStyle: {\n        marginTop: '2rem',\n        textAlign: 'center',\n        padding: '1.5rem',\n        color: 'inherit',\n        display: 'block',\n        width: '85%',\n        transitionDuration: 'color 0.15s ease',\n        position: 'relative',\n    },\n    cardHeader: {\n        width: 'auto',\n        textAlign: 'center',\n        padding: '5px',\n    },\n    cardFooter: {\n        width: '80%',\n        textAlign: 'center',\n        padding: '1.25rem',\n        border: '0',\n        borderRadius: '6px',\n        justifyContent: 'center !important',\n    },\n    cardRow: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n\n        \"&:last-child\": {\n            paddingBottom: theme.spacing(1),\n        },\n        \"&:first-child\": {\n            paddingTop: theme.spacing(0),\n        },\n    },\n    cardButtons: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        margin: \"2rem\"\n    }\n}));\n\n\nconst ColorlibConnector = styled(StepConnector)(({ theme }) => ({\n    [`&.${stepConnectorClasses.alternativeLabel}`]: {\n        top: 22,\n    },\n    [`&.${stepConnectorClasses.active}`]: {\n        [`& .${stepConnectorClasses.line}`]: {\n            backgroundImage:\n                'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)',\n            //'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n        },\n    },\n    [`&.${stepConnectorClasses.completed}`]: {\n        [`& .${stepConnectorClasses.line}`]: {\n            backgroundImage:\n                'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)',\n            //'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n        },\n    },\n    [`& .${stepConnectorClasses.line}`]: {\n        height: 3,\n        border: 0,\n        backgroundColor:\n            theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n        borderRadius: 1,\n    },\n}));\n\nconst ColorlibStepIconRoot = styled('div')(({ theme, ownerState }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    ...(ownerState.active && {\n        backgroundImage:\n            'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)',\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n    }),\n    ...(ownerState.completed && {\n        backgroundImage: 'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)',\n        //'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    }),\n}));\n\nfunction ColorlibStepIcon(props) {\n    const { active, completed, className } = props;\n\n    const icons = {\n        1: <IosShareIcon />,\n        2: <DriveFileRenameOutlineIcon />,\n        3: <MarkEmailReadIcon />,\n        4: <DoneAllIcon />,\n    };\n\n    return (\n        <ColorlibStepIconRoot ownerState={{ completed, active }} className={className}>\n            {icons[String(props.icon)]}\n        </ColorlibStepIconRoot>\n    );\n}\n\nColorlibStepIcon.propTypes = {\n    /**\n     * Whether this step is active.\n     * @default false\n     */\n    active: PropTypes.bool,\n    className: PropTypes.string,\n    /**\n     * Mark the step as completed. Is passed to child components.\n     * @default false\n     */\n    completed: PropTypes.bool,\n    /**\n     * The label displayed in the step icon.\n     */\n    icon: PropTypes.node,\n};\n\nconst TranscriptStatus = (props) => {\n    const [activeStep, setActiveStep] = React.useState(0);\n    const classes = useStyles();\n\n    const handleStep = (step) => () => {\n        setActiveStep(step);\n    };\n    const data = [\n        [{\n            pic: '/letter-2742646_640.jpg',\n            title: 'Hash the transcripts',\n            body: 'The first step of the process begins when you choose a transcript to send, the system then takes the transcript and hashes'\n        }, {\n            pic: '/upload1.svg',\n            title: 'Upload the transcripts',\n            body: 'The hash of the transcripts is then sent to the blockchain while the original transcript is sent over to the university of your choice'\n        }],\n        [{\n            pic: '/license-icon-2793454_640.png',\n            title: 'Smart Contracts',\n            body: 'These digital contracts ensure that your transcript hashes are stored in a very meticulous and safe fashion on the blockchain'\n        }, {\n            pic: '/pascal-bernardon-zt0HWquGXlQ-unsplash.jpg',\n            title: 'Writing to the Blockchain',\n            body: 'Once the interaction with the smart contract is successful, the transaction is written to the blockchain where it cannot be modified anymore'\n        }],\n        [{\n            pic: '/paper-5419824_640.jpg',\n            title: 'Paperless',\n            body: 'The actual process of sending out the transcript to a foreign university now becomes 100% paperless'\n        }, {\n            pic: '/pexels-torsten-dettlaff-193003.jpg',\n            title: 'Recieved',\n            body: 'The foreign university gets the transcript in its system immediately after the transcript hash is stored in the blockchain'\n        }],\n        [{\n            pic: '/blockchain-2853046_640.jpg',\n            title: 'Trusted',\n            body: 'The foreign exchange coordinator does not need to be worried about tampering of the transcripts anymore as the system ensures integrity of the transcript'\n        }, {\n            pic: '/stamp-1415724_640.jpg',\n            title: 'Easily Validated',\n            body: 'A received transcript can be validated easily by simply hashing it again and using the contract to see if the hash exists in on the blockchain'\n        }]\n    ];\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n\n    const showFooter = ( index) => (\n        <div style={{ display: activeStep === index ? '' : 'none' }}>\n            <Grid container spacing=\"1\" alignItems=\"center\" className={classes.cardRow + \" \" + classes.cardButtons} >\n                <Grow key={index} in={true}>\n                    <Card sx={{ width: '35%', marginRight: '2rem', height: '45vh'  }}>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"green iguana\"\n                            height=\"140\"\n                            image={data[index][0].pic}\n                        />\n                        <CardContent collapseable >\n                            <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                {data[index][0].title}\n                            </Typography>\n                            <Typography align=\"justify\" variant=\"body2\" color=\"text.secondary\">\n                                {data[index][0].body}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grow>\n                <Grow key={index+1} in={true} >\n                    <Card sx={{ width: '35%', marginLeft: '2rem', height: '45vh' }}>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"green iguana\"\n                            height=\"140\"\n                            image={data[index][1].pic}\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                {data[index][1].title}\n                            </Typography>\n                            <Typography align=\"justify\" variant=\"body2\" color=\"text.secondary\">\n                                {data[index][1].body}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grow>\n\n            </Grid>\n        </div>\n    );\n\n\n    const timeline = () => (\n        <Card variant=\"outlined\" className={classes.cardStyle}>\n            <CardHeader className={classes.cardHeader} var title={\n                <span style={{ display: 'inline-block' }}>\n                    How\n                    <Icon style={{ paddingLeft: 15, paddingRight: 15 }}>\n                        <img alt=\"\" src={exchaingeLogo} style={{ paddingUp: 100 }} />\n                    </Icon>\n                    works\n                </span>\n            } />\n            <CardContent >\n                <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n                    {props.items.map((label, index) => {\n                        const stepProps = {};\n                        const labelProps = {};\n                        if (isStepOptional(index)) {\n                            labelProps.optional = (\n                                <Typography variant=\"caption\">Optional</Typography>\n                            );\n                        }\n                        return (\n                            <Step onClick={handleStep(index)} key={label} {...stepProps}>\n                                <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n            </CardContent>\n            <br />\n            <cardFooter> {showFooter(activeStep)} </cardFooter>\n        </Card>\n    );\n\n    return (\n        <React.Fragment>\n            <center>\n                {timeline()}\n            </center></React.Fragment>\n    );\n};\n\nexport default TranscriptStatus;"]},"metadata":{},"sourceType":"module"}