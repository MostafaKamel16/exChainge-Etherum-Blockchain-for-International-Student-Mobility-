{"ast":null,"code":"var _jsxFileName = \"/Users/bob/codes/mobility-blockchain-frontend/src/auth/PrivateRoute.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { isAuthenticated } from \"./auth\"; // A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\n// Example :- https://reactrouter.com/web/example/auth-workflow\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuthenticated() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/src/auth/PrivateRoute.js"],"names":["React","Component","Redirect","Route","isAuthenticated","PrivateRoute","component","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,EAAkBC,KAAlB,QAA8B,kBAA9B;AACA,SAAQC,eAAR,QAA8B,QAA9B,C,CAEA;AACA;AACA;;;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAC;AAACC,IAAAA,SAAS,EAAEL,SAAZ;AAAuB,OAAGM;AAA1B,GAAD;AAAA,sBACjB,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EAAEC,KAAK,IACTJ,eAAe,kBACX,QAAC,SAAD,OAAeI;AAAf;AAAA;AAAA;AAAA;AAAA,YADW,gBAGX,QAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAC,QAAAA,QAAQ,EAAE,GADV;AAEAC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAFP;AADR;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,UADiB;AAAA,CAArB;;KAAMP,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {isAuthenticated} from \"./auth\";\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\n// Example :- https://reactrouter.com/web/example/auth-workflow\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/\",\n                        state: {from: props.location}\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}