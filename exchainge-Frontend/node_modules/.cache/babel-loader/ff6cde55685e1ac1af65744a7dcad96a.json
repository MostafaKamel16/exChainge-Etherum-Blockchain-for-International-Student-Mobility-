{"ast":null,"code":"var _jsxFileName = \"/Users/bob/codes/mobility-blockchain-frontend/src/views/SignupView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, Provider, useSelector } from \"react-redux\";\nimport { Container, Col } from \"react-bootstrap\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { signup } from \"../redux/action/userAction\";\nimport SignupComponent from \"../component/SignupComponent\";\nimport { Theme } from \"../component/UI/Theme\";\nimport Web3 from \"web3\";\n/**\n * For user login\n * @param {props} props\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignupView(props) {\n  _s();\n\n  const userData = useSelector(state => state.user);\n  let web3 = undefined;\n  useEffect(() => {\n    var _userData$user;\n\n    if (userData === null || userData === void 0 ? void 0 : (_userData$user = userData.user) === null || _userData$user === void 0 ? void 0 : _userData$user.username) {\n      props.history.push(\"/upolad\");\n    }\n  }, [userData, props.history]);\n\n  const onSignUp = async (username, serverAddress) => {\n    if (!window.ethereum) {\n      window.alert(\"Please install MetaMask first.\");\n      return;\n    }\n\n    if (!web3) {\n      try {\n        // Request account access if needed\n        await window.ethereum.enable(); // We don't know window.web3 version, so we use our own instance of Web3\n        // with the injected provider given by MetaMask\n\n        web3 = new Web3(window.ethereum);\n      } catch (error) {\n        window.alert(\"You need to allow MetaMask.\");\n        return;\n      }\n    }\n\n    const coinbase = await web3.eth.getCoinbase();\n\n    if (!coinbase) {\n      window.alert(\"Please activate MetaMask first.\");\n      return;\n    }\n\n    const publicAddress = coinbase.toLowerCase();\n    props.dispatch(signup(username, publicAddress, serverAddress));\n  };\n\n  const onCancel = () => {\n    props.history.push(\"/\");\n  };\n\n  const onLogin = () => {\n    props.history.push(\"/login\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: Theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Landing\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(SignupComponent, {\n              user: userData.user,\n              onLogin: onLogin,\n              onCancel: onCancel,\n              onSignup: onSignUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignupView, \"ireqX3p4NhykT1j4QxORlFVTpwA=\", false, function () {\n  return [useSelector];\n});\n\n_c = SignupView;\nexport default connect()(withRouter(SignupView));\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupView\");","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/src/views/SignupView.js"],"names":["React","useEffect","withRouter","connect","Provider","useSelector","Container","Col","ThemeProvider","signup","SignupComponent","Theme","Web3","SignupView","props","userData","state","user","web3","undefined","username","history","push","onSignUp","serverAddress","window","ethereum","alert","enable","error","coinbase","eth","getCoinbase","publicAddress","toLowerCase","dispatch","onCancel","onLogin"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, Provider, useSelector } from \"react-redux\";\nimport { Container, Col } from \"react-bootstrap\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { signup } from \"../redux/action/userAction\";\nimport SignupComponent from \"../component/SignupComponent\";\nimport { Theme } from \"../component/UI/Theme\";\nimport Web3 from \"web3\";\n\n/**\n * For user login\n * @param {props} props\n */\n\nfunction SignupView(props) {\n    const userData = useSelector((state) => state.user);\n    let web3 = undefined;\n    useEffect(() => {\n        if (userData?.user?.username) {\n            props.history.push(\"/upolad\");\n        }\n    }, [userData, props.history]);\n\n    const onSignUp = async (username, serverAddress) => {\n        if (!window.ethereum) {\n            window.alert(\"Please install MetaMask first.\");\n            return;\n        }\n\n        if (!web3) {\n            try {\n                // Request account access if needed\n                await window.ethereum.enable();\n\n                // We don't know window.web3 version, so we use our own instance of Web3\n                // with the injected provider given by MetaMask\n                web3 = new Web3(window.ethereum);\n            } catch (error) {\n                window.alert(\"You need to allow MetaMask.\");\n                return;\n            }\n        }\n\n        const coinbase = await web3.eth.getCoinbase();\n        if (!coinbase) {\n            window.alert(\"Please activate MetaMask first.\");\n            return;\n        }\n\n        const publicAddress = coinbase.toLowerCase();\n        props.dispatch(signup(username, publicAddress, serverAddress));\n    };\n\n    const onCancel = () => {\n        props.history.push(\"/\");\n    };\n    const onLogin = () => {\n        props.history.push(\"/login\");\n    };\n\n    return (\n        <ThemeProvider theme={Theme}>\n            <div className=\"Landing\">\n                <Container>\n                    <center>\n                        <br />\n                        <Col>\n                            <SignupComponent\n                                user={userData.user}\n                                onLogin={onLogin}\n                                onCancel={onCancel}\n                                onSignup={onSignUp}\n                            />\n                        </Col>\n                        <br />\n                    </center>\n                </Container>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default connect()(withRouter(SignupView));\n"]},"metadata":{},"sourceType":"module"}