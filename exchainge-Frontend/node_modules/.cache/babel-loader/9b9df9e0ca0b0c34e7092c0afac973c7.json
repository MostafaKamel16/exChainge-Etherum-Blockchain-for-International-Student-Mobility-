{"ast":null,"code":"const isEmpty = val => val === null || val === undefined;\n\nexport default (function (trigger, event) {\n  const doTrigger = function (event) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return new Promise((resolve, reject) => {\n      const results = trigger(event, ...args);\n\n      if (results && results.length) {\n        Promise.all(results).catch(reject).then(resolvedResults => {\n          let result;\n\n          if (resolvedResults) {\n            while (isEmpty(result) && resolvedResults.length) {\n              result = resolvedResults.pop();\n            }\n          }\n\n          resolve(isEmpty(result) ? undefined : result);\n        });\n      } else {\n        resolve();\n      }\n    });\n  };\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return event ? doTrigger(event, ...args) : doTrigger;\n});","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/node_modules/@rpldy/shared/lib/esm/triggerUpdater.js"],"names":["isEmpty","val","undefined","trigger","event","doTrigger","args","Promise","resolve","reject","results","length","all","catch","then","resolvedResults","result","pop"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,GAAG,IAAIA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKC,SAA/C;;AAEA,gBAAgB,UAACC,OAAD,EAAUC,KAAV,EAA6B;AAC3C,QAAMC,SAAS,GAAG,UAACD,KAAD;AAAA,uCAAWE,IAAX;AAAWA,MAAAA,IAAX;AAAA;;AAAA,WAAoB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrE,YAAMC,OAAO,GAAGP,OAAO,CAACC,KAAD,EAAQ,GAAGE,IAAX,CAAvB;;AAEA,UAAII,OAAO,IAAIA,OAAO,CAACC,MAAvB,EAA+B;AAC7BJ,QAAAA,OAAO,CAACK,GAAR,CAAYF,OAAZ,EAAqBG,KAArB,CAA2BJ,MAA3B,EAAmCK,IAAnC,CAAwCC,eAAe,IAAI;AACzD,cAAIC,MAAJ;;AAEA,cAAID,eAAJ,EAAqB;AACnB,mBAAOf,OAAO,CAACgB,MAAD,CAAP,IAAmBD,eAAe,CAACJ,MAA1C,EAAkD;AAChDK,cAAAA,MAAM,GAAGD,eAAe,CAACE,GAAhB,EAAT;AACD;AACF;;AAEDT,UAAAA,OAAO,CAACR,OAAO,CAACgB,MAAD,CAAP,GAAkBd,SAAlB,GAA8Bc,MAA/B,CAAP;AACD,SAVD;AAWD,OAZD,MAYO;AACLR,QAAAA,OAAO;AACR;AACF,KAlBqC,CAApB;AAAA,GAAlB;;AAD2C,oCAATF,IAAS;AAATA,IAAAA,IAAS;AAAA;;AAqB3C,SAAOF,KAAK,GAAGC,SAAS,CAACD,KAAD,EAAQ,GAAGE,IAAX,CAAZ,GAA+BD,SAA3C;AACD,CAtBD","sourcesContent":["const isEmpty = val => val === null || val === undefined;\n\nexport default ((trigger, event, ...args) => {\n  const doTrigger = (event, ...args) => new Promise((resolve, reject) => {\n    const results = trigger(event, ...args);\n\n    if (results && results.length) {\n      Promise.all(results).catch(reject).then(resolvedResults => {\n        let result;\n\n        if (resolvedResults) {\n          while (isEmpty(result) && resolvedResults.length) {\n            result = resolvedResults.pop();\n          }\n        }\n\n        resolve(isEmpty(result) ? undefined : result);\n      });\n    } else {\n      resolve();\n    }\n  });\n\n  return event ? doTrigger(event, ...args) : doTrigger;\n});"]},"metadata":{},"sourceType":"module"}