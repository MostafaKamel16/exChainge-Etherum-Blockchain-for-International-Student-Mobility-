{"ast":null,"code":"const triggerCancellable = function (trigger, event) {\n  const doTrigger = function (event) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return new Promise((resolve, reject) => {\n      const results = trigger(event, ...args);\n\n      if (results && results.length) {\n        Promise.all(results).catch(reject).then(resolvedResults => resolvedResults && resolve(!!~resolvedResults.findIndex(r => r === false)));\n      } else {\n        resolve(false);\n      }\n    });\n  };\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return event ? doTrigger(event, ...args) : doTrigger;\n};\n\nexport default triggerCancellable;","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/node_modules/@rpldy/shared/lib/esm/triggerCancellable.js"],"names":["triggerCancellable","trigger","event","doTrigger","args","Promise","resolve","reject","results","length","all","catch","then","resolvedResults","findIndex","r"],"mappings":"AAAA,MAAMA,kBAAkB,GAAG,UAACC,OAAD,EAAUC,KAAV,EAA6B;AACtD,QAAMC,SAAS,GAAG,UAACD,KAAD;AAAA,uCAAWE,IAAX;AAAWA,MAAAA,IAAX;AAAA;;AAAA,WAAoB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrE,YAAMC,OAAO,GAAGP,OAAO,CAACC,KAAD,EAAQ,GAAGE,IAAX,CAAvB;;AAEA,UAAII,OAAO,IAAIA,OAAO,CAACC,MAAvB,EAA+B;AAC7BJ,QAAAA,OAAO,CAACK,GAAR,CAAYF,OAAZ,EAAqBG,KAArB,CAA2BJ,MAA3B,EAAmCK,IAAnC,CAAwCC,eAAe,IAAIA,eAAe,IAAIP,OAAO,CAAC,CAAC,CAAC,CAACO,eAAe,CAACC,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,KAAK,KAArC,CAAJ,CAArF;AACD,OAFD,MAEO;AACLT,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KARqC,CAApB;AAAA,GAAlB;;AADsD,oCAATF,IAAS;AAATA,IAAAA,IAAS;AAAA;;AAWtD,SAAOF,KAAK,GAAGC,SAAS,CAACD,KAAD,EAAQ,GAAGE,IAAX,CAAZ,GAA+BD,SAA3C;AACD,CAZD;;AAcA,eAAeH,kBAAf","sourcesContent":["const triggerCancellable = (trigger, event, ...args) => {\n  const doTrigger = (event, ...args) => new Promise((resolve, reject) => {\n    const results = trigger(event, ...args);\n\n    if (results && results.length) {\n      Promise.all(results).catch(reject).then(resolvedResults => resolvedResults && resolve(!!~resolvedResults.findIndex(r => r === false)));\n    } else {\n      resolve(false);\n    }\n  });\n\n  return event ? doTrigger(event, ...args) : doTrigger;\n};\n\nexport default triggerCancellable;"]},"metadata":{},"sourceType":"module"}