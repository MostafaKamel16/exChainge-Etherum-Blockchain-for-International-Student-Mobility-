{"ast":null,"code":"var _jsxFileName = \"/Users/bob/codes/mobility-blockchain-frontend/src/views/LoginView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, Provider, useSelector } from \"react-redux\";\nimport { Container, Col } from \"react-bootstrap\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { login } from \"../redux/action/userAction\";\nimport LoginComponent from \"../component/LoginComponent\";\nimport { Theme } from \"../component/UI/Theme\";\nimport { readNonce } from \"../services/api\";\nimport { getCurrentAccount, signNonce, startService } from \"../services/blockchain/util\";\nimport { fundAccount } from \"../utils/accountUtils\";\nimport Spinner from \"../component/Spinner\";\n/**\n * For user login\n * @param {props} props\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginView(props) {\n  _s();\n\n  const userData = useSelector(state => state.user);\n  const [spinnerMessage, setSpinnerMessage] = React.useState(\"\");\n  useEffect(() => {\n    var _userData$user;\n\n    if (userData === null || userData === void 0 ? void 0 : (_userData$user = userData.user) === null || _userData$user === void 0 ? void 0 : _userData$user.username) {\n      props.history.push(\"/upload\");\n    }\n  }, [userData, props.history]);\n\n  const handleSignMessage = async publicAddress => {\n    try {\n      const nonce = await readNonce(publicAddress.toLowerCase());\n      const signature = await signNonce(nonce);\n      console.log(signature);\n      return {\n        publicAddress,\n        signature\n      };\n    } catch (err) {\n      window.alert(\"You need to sign the message to be able to log in.\");\n      window.location.reload(false);\n    }\n  };\n\n  const onLogin = async username => {\n    setSpinnerMessage(\"Connecting to Metamask..\");\n    await startService();\n    const account = getCurrentAccount();\n    setSpinnerMessage(\"Funding account..\");\n    await fundAccount();\n    setSpinnerMessage(\"Authenticating user..\");\n    const data = await handleSignMessage(account);\n    setSpinnerMessage(\"Logging in..\");\n    props.dispatch(login(username, data));\n    setSpinnerMessage(\"\");\n  };\n\n  const onCancel = () => {\n    props.history.push(\"/\");\n  };\n\n  const onSignUp = () => {\n    props.history.push(\"/signup\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: Theme,\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      message: spinnerMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Landing\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(LoginComponent, {\n              user: userData.user,\n              onLogin: onLogin,\n              onCancel: onCancel,\n              onSignUp: onSignUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginView, \"DyLcU4ucALIZElRrGOy+DS8U+iA=\", false, function () {\n  return [useSelector];\n});\n\n_c = LoginView;\nexport default connect()(withRouter(LoginView));\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginView\");","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/src/views/LoginView.js"],"names":["React","useEffect","withRouter","connect","Provider","useSelector","Container","Col","ThemeProvider","login","LoginComponent","Theme","readNonce","getCurrentAccount","signNonce","startService","fundAccount","Spinner","LoginView","props","userData","state","user","spinnerMessage","setSpinnerMessage","useState","username","history","push","handleSignMessage","publicAddress","nonce","toLowerCase","signature","console","log","err","window","alert","location","reload","onLogin","account","data","dispatch","onCancel","onSignUp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,WAA5B,QAA+C,aAA/C;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,iBAAT,EAA4BC,SAA5B,EAAuCC,YAAvC,QAA2D,6BAA3D;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA;AACA;AACA;AACA;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAMC,QAAQ,GAAGf,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA5B;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCxB,KAAK,CAACyB,QAAN,CAAe,EAAf,CAA5C;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACZ,QAAImB,QAAJ,aAAIA,QAAJ,yCAAIA,QAAQ,CAAEE,IAAd,mDAAI,eAAgBI,QAApB,EAA8B;AAC1BP,MAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AACH;AACJ,GAJQ,EAIN,CAACR,QAAD,EAAWD,KAAK,CAACQ,OAAjB,CAJM,CAAT;;AAMA,QAAME,iBAAiB,GAAG,MAAOC,aAAP,IAAyB;AAC/C,QAAI;AACA,YAAMC,KAAK,GAAG,MAAMnB,SAAS,CAACkB,aAAa,CAACE,WAAd,EAAD,CAA7B;AACA,YAAMC,SAAS,GAAG,MAAMnB,SAAS,CAACiB,KAAD,CAAjC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,aAAO;AAAEH,QAAAA,aAAF;AAAiBG,QAAAA;AAAjB,OAAP;AACH,KALD,CAKE,OAAOG,GAAP,EAAY;AACVC,MAAAA,MAAM,CAACC,KAAP,CACI,oDADJ;AAGAD,MAAAA,MAAM,CAACE,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH;AACJ,GAZD;;AAcA,QAAMC,OAAO,GAAG,MAAOf,QAAP,IAAoB;AAChCF,IAAAA,iBAAiB,CAAC,0BAAD,CAAjB;AACA,UAAMT,YAAY,EAAlB;AACA,UAAM2B,OAAO,GAAG7B,iBAAiB,EAAjC;AAEAW,IAAAA,iBAAiB,CAAC,mBAAD,CAAjB;AACA,UAAMR,WAAW,EAAjB;AAEAQ,IAAAA,iBAAiB,CAAC,uBAAD,CAAjB;AACA,UAAMmB,IAAI,GAAG,MAAMd,iBAAiB,CAACa,OAAD,CAApC;AAEAlB,IAAAA,iBAAiB,CAAC,cAAD,CAAjB;AACAL,IAAAA,KAAK,CAACyB,QAAN,CAAenC,KAAK,CAACiB,QAAD,EAAWiB,IAAX,CAApB;AACAnB,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH,GAdD;;AAgBA,QAAMqB,QAAQ,GAAG,MAAM;AACnB1B,IAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,GAFD;;AAIA,QAAMkB,QAAQ,GAAG,MAAM;AACnB3B,IAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AACH,GAFD;;AAIA,sBACI,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEjB,KAAtB;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEY;AAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI,QAAC,SAAD;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,GAAD;AAAA,mCACI,QAAC,cAAD;AACI,cAAA,IAAI,EAAEH,QAAQ,CAACE,IADnB;AAEI,cAAA,OAAO,EAAEmB,OAFb;AAGI,cAAA,QAAQ,EAAEI,QAHd;AAII,cAAA,QAAQ,EAAEC;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAUI;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GArEQ5B,S;UACYb,W;;;KADZa,S;AAuET,eAAef,OAAO,GAAGD,UAAU,CAACgB,SAAD,CAAb,CAAtB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, Provider, useSelector } from \"react-redux\";\nimport { Container, Col } from \"react-bootstrap\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { login } from \"../redux/action/userAction\";\nimport LoginComponent from \"../component/LoginComponent\";\nimport { Theme } from \"../component/UI/Theme\";\nimport { readNonce } from \"../services/api\";\nimport { getCurrentAccount, signNonce, startService } from \"../services/blockchain/util\";\nimport { fundAccount } from \"../utils/accountUtils\";\nimport Spinner from \"../component/Spinner\";\n\n/**\n * For user login\n * @param {props} props\n */\n\nfunction LoginView(props) {\n    const userData = useSelector((state) => state.user);\n    const [spinnerMessage, setSpinnerMessage] = React.useState(\"\");\n\n    useEffect(() => {\n        if (userData?.user?.username) {\n            props.history.push(\"/upload\");\n        }\n    }, [userData, props.history]);\n\n    const handleSignMessage = async (publicAddress) => {\n        try {\n            const nonce = await readNonce(publicAddress.toLowerCase());\n            const signature = await signNonce(nonce);\n            console.log(signature);\n            return { publicAddress, signature };\n        } catch (err) {\n            window.alert(\n                \"You need to sign the message to be able to log in.\"\n            );\n            window.location.reload(false);\n        }\n    };\n\n    const onLogin = async (username) => {\n        setSpinnerMessage(\"Connecting to Metamask..\");\n        await startService();\n        const account = getCurrentAccount();\n\n        setSpinnerMessage(\"Funding account..\");\n        await fundAccount();\n\n        setSpinnerMessage(\"Authenticating user..\");\n        const data = await handleSignMessage(account);\n\n        setSpinnerMessage(\"Logging in..\");\n        props.dispatch(login(username, data));\n        setSpinnerMessage(\"\");\n    };\n\n    const onCancel = () => {\n        props.history.push(\"/\");\n    };\n\n    const onSignUp = () => {\n        props.history.push(\"/signup\");\n    };\n\n    return (\n        <ThemeProvider theme={Theme}>\n            <Spinner message={spinnerMessage} />\n            <div className=\"Landing\">\n                <Container>\n                    <center>\n                        <br />\n                        <Col>\n                            <LoginComponent\n                                user={userData.user}\n                                onLogin={onLogin}\n                                onCancel={onCancel}\n                                onSignUp={onSignUp}\n                            />\n                        </Col>\n                        <br />\n                    </center>\n                </Container>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default connect()(withRouter(LoginView));\n"]},"metadata":{},"sourceType":"module"}