{"ast":null,"code":"var _jsxFileName = \"/Users/bob/codes/mobility-blockchain-frontend/src/views/LoginView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, Provider, useSelector } from \"react-redux\";\nimport { Container, Col } from \"react-bootstrap\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { login } from \"../redux/action/userAction\";\nimport LoginComponent from \"../component/LoginComponent\";\nimport { Theme } from \"../component/UI/Theme\";\nimport Web3 from 'web3';\nimport { readNounce } from '../api';\n/**\n * For user login\n * @param {props} props\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginView(props) {\n  _s();\n\n  const userData = useSelector(state => state.user);\n  let web3 = undefined;\n  useEffect(() => {\n    var _userData$user;\n\n    if (userData === null || userData === void 0 ? void 0 : (_userData$user = userData.user) === null || _userData$user === void 0 ? void 0 : _userData$user.username) {\n      props.history.push(\"/upload\");\n    }\n  }, [userData, props.history]);\n\n  const handleSignMessage = async publicAddress => {\n    try {\n      const nounce = await readNounce(publicAddress);\n      const signature = await web3.eth.personal.sign(`I am snonceigning my one-time nonce: ${nounce}`, publicAddress, '' // MetaMask will ignore the password argument here\n      );\n      console.log(signature);\n      return {\n        publicAddress,\n        signature\n      };\n    } catch (err) {\n      throw new Error('You need to sign the message to be able to log in.');\n    }\n  };\n\n  const onLogin = async username => {\n    if (!window.ethereum) {\n      window.alert('Please install MetaMask first.');\n      return;\n    }\n\n    if (!web3) {\n      try {\n        // Request account access if needed\n        await window.ethereum.enable(); // We don't know window.web3 version, so we use our own instance of Web3\n        // with the injected provider given by MetaMask\n\n        web3 = new Web3(window.ethereum);\n      } catch (error) {\n        window.alert('You need to allow MetaMask.');\n        return;\n      }\n    }\n\n    const coinbase = await web3.eth.getCoinbase();\n\n    if (!coinbase) {\n      window.alert('Please activate MetaMask first.');\n      return;\n    }\n\n    const publicAddress = coinbase.toLowerCase();\n    const data = await handleSignMessage(publicAddress);\n    props.dispatch(login(username, data));\n  };\n\n  const onCancel = () => {\n    props.history.push(\"/\");\n  };\n\n  const onSignUp = () => {\n    props.history.push(\"/signup\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: Theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Landing\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(LoginComponent, {\n              user: userData.user,\n              onLogin: onLogin,\n              onCancel: onCancel,\n              onSignUp: onSignUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginView, \"ireqX3p4NhykT1j4QxORlFVTpwA=\", false, function () {\n  return [useSelector];\n});\n\n_c = LoginView;\nexport default connect()(withRouter(LoginView));\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginView\");","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/src/views/LoginView.js"],"names":["React","useEffect","withRouter","connect","Provider","useSelector","Container","Col","ThemeProvider","login","LoginComponent","Theme","Web3","readNounce","LoginView","props","userData","state","user","web3","undefined","username","history","push","handleSignMessage","publicAddress","nounce","signature","eth","personal","sign","console","log","err","Error","onLogin","window","ethereum","alert","enable","error","coinbase","getCoinbase","toLowerCase","data","dispatch","onCancel","onSignUp"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect, Provider, useSelector} from \"react-redux\";\nimport {Container, Col} from \"react-bootstrap\";\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport {login} from \"../redux/action/userAction\";\nimport LoginComponent from \"../component/LoginComponent\";\nimport {Theme} from \"../component/UI/Theme\";\nimport Web3 from 'web3';\nimport  {readNounce} from '../api'\n\n/**\n * For user login\n * @param {props} props\n */\n\nfunction LoginView(props) {\n    const userData = useSelector((state) => state.user);\n    let web3 = undefined;\n    useEffect(() => {\n        if (userData?.user?.username) {\n            props.history.push(\"/upload\");\n        }\n    }, [userData, props.history]);\n\n    const handleSignMessage = async (publicAddress) => {\n        try {\n            const nounce = await readNounce(publicAddress)\n            const signature = await web3.eth.personal.sign(\n                `I am snonceigning my one-time nonce: ${nounce}`,\n                publicAddress,\n                '' // MetaMask will ignore the password argument here\n            );\n            console.log(signature)\n            return { publicAddress, signature };\n        } catch (err) {\n            throw new Error(\n                'You need to sign the message to be able to log in.'\n            );\n        }\n    };\n\n    const onLogin = async (username) => {\n        if (!(window).ethereum) {\n\t\t\twindow.alert('Please install MetaMask first.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!web3) {\n\t\t\ttry {\n\t\t\t\t// Request account access if needed\n\t\t\t\tawait (window).ethereum.enable();\n\n\t\t\t\t// We don't know window.web3 version, so we use our own instance of Web3\n\t\t\t\t// with the injected provider given by MetaMask\n\t\t\t\tweb3 = new Web3((window).ethereum);\n\t\t\t} catch (error) {\n\t\t\t\twindow.alert('You need to allow MetaMask.');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n        \n        const coinbase = await web3.eth.getCoinbase();\n\t\tif (!coinbase) {\n\t\t\twindow.alert('Please activate MetaMask first.');\n\t\t\treturn;\n\t\t}\n\n        const publicAddress = coinbase.toLowerCase();\n\n        \n        const data = await handleSignMessage(publicAddress)\n        props.dispatch(login(username, data));\n    };\n\n    const onCancel = () => {\n        props.history.push(\"/\");\n    };\n\n    const onSignUp = () => {\n        props.history.push(\"/signup\");\n    };\n\n    return (\n        <ThemeProvider theme={Theme}>\n            <div className=\"Landing\">\n                    <Container>\n                        <center>\n                            <br/>\n                            <Col>\n                                <LoginComponent\n                                    user={userData.user}\n                                    onLogin={onLogin}\n                                    onCancel={onCancel}\n                                    onSignUp={onSignUp}\n                                />\n                            </Col>\n                            <br/>\n                        </center>\n                    </Container>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default connect()(withRouter(LoginView));"]},"metadata":{},"sourceType":"module"}