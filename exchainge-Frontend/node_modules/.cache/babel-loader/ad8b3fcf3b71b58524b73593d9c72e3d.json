{"ast":null,"code":"var _jsxFileName = \"/Users/bob/codes/mobility-blockchain-frontend/src/views/Upload.js\";\nimport UploadFileIcon from \"@mui/icons-material/UploadFile\";\nimport \"../App.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button } from \"@mui/material\";\nimport React, { Component } from \"react\";\nimport Popup from \"../component/Popup.js\";\nimport AppNavBar from \"../component/AppNavBar\";\nimport AlertDialog from \"../component/AlertDialog\";\nimport FolderIcon from \"../component/FolderIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Upload extends React.Component {\n  constructor() {\n    super();\n\n    this.handleselectedFile = event => {\n      var file = event.target.files[0];\n      var reader = new FileReader();\n      reader.onload = this.handleFileRead(event);\n      reader.readAsText(file);\n      this.setState({\n        selectedFile: event.target.files[0],\n        selectedFileName: event.target.files[0].name,\n        showSendToUniversity: true\n      });\n      console.log();\n    };\n\n    this.state = {\n      showPopup: false,\n      showSendToUniversity: false,\n      uploadfile: {}\n    };\n    this.handleselectedFile = this.handleselectedFile.bind(this);\n    this.handleFileRead = this.handleFileRead.bind(this);\n  }\n\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n  handleFileRead(event) {\n    console.log(event.target.result);\n  }\n\n  async componentDidUpdate() {\n    console.log(this.state.uploadfile);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"container\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        id: \"iconsPosition\",\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 1,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"UploadButton\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            accept: \".pdf,.json,.doc,.docx\",\n            id: \"file-upload\",\n            onChange: this.handleselectedFile,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              component: \"span\",\n              endIcon: /*#__PURE__*/_jsxDEV(UploadFileIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 42\n              }, this),\n              children: \"Upload Your File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.selectedFileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", this.state.showSendToUniversity ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.togglePopup.bind(this),\n            id: \"SendToUniversity\",\n            children: [\"Send to University\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", this.state.showPopup ? /*#__PURE__*/_jsxDEV(Popup, {\n            text: \"Close Me\",\n            closePopup: this.togglePopup.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/src/views/Upload.js"],"names":["UploadFileIcon","Grid","Button","React","Component","Popup","AppNavBar","AlertDialog","FolderIcon","Upload","constructor","handleselectedFile","event","file","target","files","reader","FileReader","onload","handleFileRead","readAsText","setState","selectedFile","selectedFileName","name","showSendToUniversity","console","log","state","showPopup","uploadfile","bind","togglePopup","result","componentDidUpdate","render","display"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,gCAA3B;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACC,SAA3B,CAAqC;AACjCM,EAAAA,WAAW,GAAG;AACV;;AADU,SAmBdC,kBAnBc,GAmBOC,KAAD,IAAW;AAC3B,UAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;AACA,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACCD,MAAAA,MAAM,CAACE,MAAP,GAAgB,KAAKC,cAAL,CAAoBP,KAApB,CAAhB;AAEDI,MAAAA,MAAM,CAACI,UAAP,CAAkBP,IAAlB;AACC,WAAKQ,QAAL,CAAc;AACXC,QAAAA,YAAY,EAAEV,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CADH;AAEXQ,QAAAA,gBAAgB,EAAEX,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBS,IAF7B;AAGXC,QAAAA,oBAAoB,EAAE;AAHX,OAAd;AAKDC,MAAAA,OAAO,CAACC,GAAR;AAEH,KAhCa;;AAEV,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KADF;AAETJ,MAAAA,oBAAoB,EAAE,KAFb;AAGTK,MAAAA,UAAU,EAAC;AAHF,KAAb;AAKA,SAAKnB,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBoB,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKZ,cAAL,GAAoB,KAAKA,cAAL,CAAoBY,IAApB,CAAyB,IAAzB,CAApB;AACH;;AACDC,EAAAA,WAAW,GAAG;AACV,SAAKX,QAAL,CAAc;AACVQ,MAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADb,KAAd;AAGH;;AACDV,EAAAA,cAAc,CAAEP,KAAF,EAAQ;AACjBc,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACE,MAAN,CAAamB,MAAzB;AACJ;;AAgBuB,QAAlBC,kBAAkB,GAAG;AACvBR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,UAAvB;AAEH;;AACDK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,eAAT;AAAyB,QAAA,SAAS,MAAlC;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,EAAE,EAAC,cAAR;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,MAAM,EAAC,uBAHX;AAII,YAAA,EAAE,EAAC,aAJP;AAKI,YAAA,QAAQ,EAAE,KAAKxB,kBALnB;AAMI,YAAA,KAAK,EAAE;AAAEyB,cAAAA,OAAO,EAAE;AAAX;AANX;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA,mCACI,QAAC,MAAD;AACI,cAAA,OAAO,EAAC,WADZ;AAEI,cAAA,KAAK,EAAC,SAFV;AAGI,cAAA,SAAS,EAAC,MAHd;AAII,cAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,sBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBATJ,eAoBI;AAAA,sBAAI,KAAKR,KAAL,CAAWL;AAAf;AAAA;AAAA;AAAA;AAAA,kBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAwBI;AAAA,qBACK,GADL,EAEK,KAAKK,KAAL,CAAWH,oBAAX,gBACG,QAAC,MAAD;AACI,YAAA,OAAO,EAAC,WADZ;AAEI,YAAA,KAAK,EAAC,SAFV;AAGI,YAAA,OAAO,EAAE,KAAKO,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAHb;AAII,YAAA,EAAE,EAAC,kBAJP;AAAA,6CAMuB,GANvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,GASG,IAXR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBJ,eAsCI;AAAA,qBACK,GADL,EAEK,KAAKH,KAAL,CAAWC,SAAX,gBACG,QAAC,KAAD;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,UAAU,EAAE,KAAKG,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB;AAFhB;AAAA;AAAA;AAAA;AAAA,kBADH,GAKG,IAPR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqDH;;AA5FgC;;AA8FrC,eAAetB,MAAf","sourcesContent":["import UploadFileIcon from \"@mui/icons-material/UploadFile\";\nimport \"../App.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button } from \"@mui/material\";\nimport React, { Component } from \"react\";\nimport Popup from \"../component/Popup.js\";\nimport AppNavBar from \"../component/AppNavBar\";\nimport AlertDialog from \"../component/AlertDialog\";\nimport FolderIcon from \"../component/FolderIcon\";\n\nclass Upload extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            showPopup: false,\n            showSendToUniversity: false,\n            uploadfile:{},\n        };\n        this.handleselectedFile = this.handleselectedFile.bind(this);\n        this.handleFileRead=this.handleFileRead.bind(this);\n    }\n    togglePopup() {\n        this.setState({\n            showPopup: !this.state.showPopup,\n        });\n    }\n    handleFileRead (event){\n         console.log(event.target.result);\n    }\n\n    handleselectedFile =(event) => {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n         reader.onload = this.handleFileRead(event);\n        \n        reader.readAsText(file);\n         this.setState({\n            selectedFile: event.target.files[0],\n            selectedFileName: event.target.files[0].name,\n            showSendToUniversity: true,\n        });\n        console.log();\n        \n    }\n    async componentDidUpdate() { \n        console.log(this.state.uploadfile);\n        \n    }\n    render() {\n        return (\n            <container>\n                <AppNavBar />\n                <Grid id=\"iconsPosition\" container>\n                    <Grid xs={1}> </Grid>\n                    <div id=\"UploadButton\">\n                        <input\n                            type=\"file\"\n                            name=\"file\"\n                            accept=\".pdf,.json,.doc,.docx\"\n                            id=\"file-upload\"\n                            onChange={this.handleselectedFile}\n                            style={{ display: \"none\" }}\n                        />\n                        <label htmlFor=\"file-upload\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                component=\"span\"\n                                endIcon={<UploadFileIcon />}\n                            >\n                                Upload Your File\n                            </Button>\n                        </label>\n\n                        <p>{this.state.selectedFileName}</p>\n                    </div>\n                    <div>\n                        {\" \"}\n                        {this.state.showSendToUniversity ? (\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.togglePopup.bind(this)}\n                                id=\"SendToUniversity\"\n                            >\n                                Send to University{\" \"}\n                            </Button>\n                        ) : null}\n                    </div>\n\n                    <div>\n                        {\" \"}\n                        {this.state.showPopup ? (\n                            <Popup\n                                text=\"Close Me\"\n                                closePopup={this.togglePopup.bind(this)}\n                            />\n                        ) : null}\n                    </div>\n                </Grid>\n            </container>\n        );\n    }\n}\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}