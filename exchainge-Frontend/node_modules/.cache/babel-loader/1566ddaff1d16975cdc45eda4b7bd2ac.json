{"ast":null,"code":"var _jsxFileName = \"/Users/bob/codes/mobility-blockchain-frontend/src/views/Upload.js\";\nimport UploadFileIcon from \"@mui/icons-material/UploadFile\";\nimport \"../App.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button } from \"@mui/material\";\nimport React, { Component } from \"react\";\nimport Popup from \"../component/Popup.js\";\nimport AppNavBar from \"../component/AppNavBar\";\nimport AlertDialog from \"../component/AlertDialog\";\nimport FolderIcon from \"../component/FolderIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Upload extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showPopup: false,\n      showSendToUniversity: false,\n      uploadfile: {}\n    };\n    this.handleselectedFile = this.handleselectedFile.bind(this);\n  }\n\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n  handleselectedFile(event) {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    let x = {};\n\n    reader.onload = function (event) {\n      console.log(event.target.result);\n      x = event.target.result;\n    };\n\n    reader.readAsText(file);\n    this.setState({\n      selectedFile: event.target.files[0],\n      selectedFileName: event.target.files[0].name,\n      showSendToUniversity: true,\n      uploadfile: event.target.result\n    });\n  }\n\n  async componentDidUpdate() {\n    console.log(this.state.selectedFileName);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"container\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        id: \"iconsPosition\",\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 1,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"UploadButton\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            accept: \".pdf,.json,.doc,.docx\",\n            id: \"file-upload\",\n            onChange: this.handleselectedFile,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              component: \"span\",\n              endIcon: /*#__PURE__*/_jsxDEV(UploadFileIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 42\n              }, this),\n              children: \"Upload Your File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.selectedFileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", this.state.showSendToUniversity ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.togglePopup.bind(this),\n            id: \"SendToUniversity\",\n            children: [\"Send to University\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", this.state.showPopup ? /*#__PURE__*/_jsxDEV(Popup, {\n            text: \"Close Me\",\n            closePopup: this.togglePopup.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/src/views/Upload.js"],"names":["UploadFileIcon","Grid","Button","React","Component","Popup","AppNavBar","AlertDialog","FolderIcon","Upload","constructor","state","showPopup","showSendToUniversity","uploadfile","handleselectedFile","bind","togglePopup","setState","event","file","target","files","reader","FileReader","x","onload","console","log","result","readAsText","selectedFile","selectedFileName","name","componentDidUpdate","render","display"],"mappings":"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","sourcesContent":["import UploadFileIcon from \"@mui/icons-material/UploadFile\";\nimport \"../App.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button } from \"@mui/material\";\nimport React, { Component } from \"react\";\nimport Popup from \"../component/Popup.js\";\nimport AppNavBar from \"../component/AppNavBar\";\nimport AlertDialog from \"../component/AlertDialog\";\nimport FolderIcon from \"../component/FolderIcon\";\n\nclass Upload extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            showPopup: false,\n            showSendToUniversity: false,\n            uploadfile:{},\n        };\n        this.handleselectedFile = this.handleselectedFile.bind(this);\n    }\n    togglePopup() {\n        this.setState({\n            showPopup: !this.state.showPopup,\n        });\n    }\n\n    handleselectedFile(event) {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        let x= {};\n         reader.onload =   function(event) {\n           \n          console.log(event.target.result);\n        x= event.target.result;\n        };\n      \n        reader.readAsText(file);\n         this.setState({\n            selectedFile: event.target.files[0],\n            selectedFileName: event.target.files[0].name,\n            showSendToUniversity: true,\n            uploadfile:event.target.result,\n        });\n        \n    }\n    async componentDidUpdate() { \n        console.log(this.state.selectedFileName);\n        \n    }\n    render() {\n        return (\n            <container>\n                <AppNavBar />\n                <Grid id=\"iconsPosition\" container>\n                    <Grid xs={1}> </Grid>\n                    <div id=\"UploadButton\">\n                        <input\n                            type=\"file\"\n                            name=\"file\"\n                            accept=\".pdf,.json,.doc,.docx\"\n                            id=\"file-upload\"\n                            onChange={this.handleselectedFile}\n                            style={{ display: \"none\" }}\n                        />\n                        <label htmlFor=\"file-upload\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                component=\"span\"\n                                endIcon={<UploadFileIcon />}\n                            >\n                                Upload Your File\n                            </Button>\n                        </label>\n\n                        <p>{this.state.selectedFileName}</p>\n                    </div>\n                    <div>\n                        {\" \"}\n                        {this.state.showSendToUniversity ? (\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.togglePopup.bind(this)}\n                                id=\"SendToUniversity\"\n                            >\n                                Send to University{\" \"}\n                            </Button>\n                        ) : null}\n                    </div>\n\n                    <div>\n                        {\" \"}\n                        {this.state.showPopup ? (\n                            <Popup\n                                text=\"Close Me\"\n                                closePopup={this.togglePopup.bind(this)}\n                            />\n                        ) : null}\n                    </div>\n                </Grid>\n            </container>\n        );\n    }\n}\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}