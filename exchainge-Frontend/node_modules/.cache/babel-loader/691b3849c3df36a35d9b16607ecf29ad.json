{"ast":null,"code":"var _jsxFileName = \"/Users/bob/codes/mobility-blockchain-frontend/src/views/BatchSend.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"react-bootstrap\";\nimport AppNavBar from \"../component/AppNavBar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Typography, Grid, Container as MUIContainer } from '@mui/material';\nimport { getPartnerStats } from \"../services/api\";\nimport { isAuthenticated } from \"../auth/auth\";\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { setTranscriptsToNotBatched, readBatchedInternalTranscripts } from \"../services/api\";\nimport hash from \"object-hash\";\nimport { sendTranscript } from \"../services/blockchain/contractCalls\";\nimport { startService } from \"../services/blockchain/util\";\nimport SelectionList from \"../component/SelectionList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    //height: '89vh',\n    display: 'flex',\n    justifyContent: 'start' //backgroundColor: theme.palette.primary.light,\n\n  },\n  textField: {\n    width: '100%'\n  },\n  questionContainer: {\n    width: '70%'\n  },\n  questionSectionContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  addQuestionIconContainer: {\n    display: 'flex',\n    height: '12rem'\n  },\n  circleIcon: {\n    display: 'box'\n  },\n  leftPane: {\n    width: '60%',\n    paddingTop: '4rem',\n    backgroundColor: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    border: '1px grey solid'\n  },\n  leftPaneSection: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  rightPane: {\n    width: '100%',\n    display: 'flex',\n    overflowY: 'scroll',\n    flexDirection: 'column'\n  },\n  rightPaneTop: {\n    height: '14.5rem',\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'white',\n    border: '1px grey solid',\n    padding: '2rem'\n  },\n  modal: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '15rem',\n    marginLeft: '30rem',\n    marginRight: '30rem',\n    minHeight: \"220px\",\n    width: \"40%\"\n  },\n  MenuItem: {\n    marginTop: \"30px\"\n  },\n  button: {\n    margin: \"2rem\",\n    justifyContent: 'center'\n  },\n  sectionListContainer: {\n    marginTop: '1rem',\n    height: '20rem',\n    width: '100%',\n    overflowY: 'scroll'\n  },\n  surveyListContainer: {\n    marginTop: '1rem',\n    height: '27.5rem',\n    width: '22rem',\n    overflowY: 'scroll'\n  },\n  surveyListItem: {\n    display: 'flex',\n    height: '4rem',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n      cursor: 'pointer'\n    }\n  },\n  sectionListItem: {\n    'display': 'flex',\n    'justifyContent': 'center',\n    'height': '4rem',\n    'width': '70%',\n    'marginBottom': '0.5rem',\n    'marginTop': '0.5rem',\n    'alignItems': 'center',\n    '&:hover': {\n      'backgroundColor': theme.palette.primary.light,\n      'cursor': 'pointer'\n    }\n  },\n  upload: {\n    display: 'flex',\n    marginTop: '0.5rem',\n    height: '9rem',\n    width: '75%'\n  },\n  createSurveyButton: {\n    display: 'flex',\n    height: '3rem',\n    width: '15rem'\n  },\n  centerDiv: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '1rem'\n  },\n  form: {\n    margin: '1rem',\n    width: '40%'\n  },\n  inline: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  chart: {\n    height: '250px'\n  }\n}));\n\nconst postToServer = async (address, data) => {\n  const response = await fetch(address, {\n    'method': \"POST\",\n    'headers': {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    'body': JSON.stringify(data)\n  });\n  console.log('Sent transcripts to the foreign university server');\n  return response;\n};\n\nconst BatchSend = props => {\n  _s();\n\n  const classes = useStyles();\n  const [partnerList, setPartnerList] = useState([]);\n  const [stats, setStats] = useState({});\n  const [batchedTranscripts, setBatchedTranscripts] = useState([]);\n  const [selectedUniIndex, setSelectedUniIndex] = React.useState(-1);\n  const selectedUni = selectedUniIndex >= 0 ? partnerList[selectedUniIndex] : {};\n  const selectedUniName = selectedUniIndex >= 0 ? selectedUni.partner_university : \"all Universities\";\n  useEffect(() => {\n    setPartnerList(JSON.parse(localStorage.getItem('partnerUnis')));\n  }, []);\n  useEffect(() => {\n    const getStats = async () => {\n      setStats(await getPartnerStats(selectedUniName, isAuthenticated()));\n    };\n\n    const updateBatchedTranscripts = async () => {\n      setBatchedTranscripts(await readBatchedInternalTranscripts(isAuthenticated(), selectedUniName)); //receiverUni\n    };\n\n    getStats();\n    updateBatchedTranscripts();\n  }, [selectedUniName]);\n\n  const handleSendBatchedTranscripts = async () => {\n    console.log(`Sending batched transcripts to ${selectedUniName}`);\n    const token = isAuthenticated();\n    const combinedHash = hash(batchedTranscripts);\n    await startService();\n\n    try {\n      const index = await sendTranscript(combinedHash, selectedUni.blockchain_address);\n\n      for (var file of batchedTranscripts) {\n        console.log('file', file);\n        file.index = index;\n      }\n\n      await postToServer(\"http://localhost:4003/transcript/create\", batchedTranscripts); //receiverUni.server_address\n\n      await setTranscriptsToNotBatched(token, selectedUniName);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(AppNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MUIContainer, {\n      maxWidth: \"sm\",\n      sx: {\n        mt: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mb: 1\n        },\n        children: \"Select a university to see some interaction statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectionList, {\n        options: partnerList,\n        selection: selectedUniIndex,\n        setSelection: setSelectedUniIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        style: {\n          textAlign: 'center',\n          marginTop: 50\n        },\n        children: [\"Interaction with \", selectedUniName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        mt: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: stats.sent !== 0 || stats.recieved !== 0 ? /*#__PURE__*/_jsxDEV(PieChart, {\n          className: classes.chart,\n          animate: true,\n          label: _ref => {\n            let {\n              dataEntry\n            } = _ref;\n            return dataEntry.value === 0 ? '' : `${dataEntry.title}: ${dataEntry.value} (${Math.round(dataEntry.percentage)}%)`;\n          },\n          labelStyle: {\n            fontSize: '50%'\n          },\n          data: [{\n            title: 'Sent',\n            value: stats.sent,\n            color: '#E38627'\n          }, {\n            title: 'Received',\n            value: stats.recieved,\n            color: '#C13C37'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: \"No transcripts have been exchanged yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [selectedUniIndex >= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.questionSectionContainer,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Number of batched transcripts: \", batchedTranscripts.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              backgroundColor: \"rgb(53, 110, 255)\"\n            },\n            variant: \"contained\",\n            onClick: handleSendBatchedTranscripts,\n            disabled: batchedTranscripts.length === 0,\n            children: \" Send Batched Transcripts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), selectedUniIndex < 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.questionSectionContainer,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Number of partner universities: \", partnerList.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BatchSend, \"L5ltctOMNxyZVBkWsCWSUdYhMNQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = BatchSend;\nexport default connect()(withRouter(BatchSend));\n\nvar _c;\n\n$RefreshReg$(_c, \"BatchSend\");","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/src/views/BatchSend.js"],"names":["React","useEffect","useState","withRouter","connect","Container","AppNavBar","makeStyles","Button","Typography","Grid","MUIContainer","getPartnerStats","isAuthenticated","PieChart","setTranscriptsToNotBatched","readBatchedInternalTranscripts","hash","sendTranscript","startService","SelectionList","useStyles","theme","container","display","justifyContent","textField","width","questionContainer","questionSectionContainer","flexDirection","alignItems","addQuestionIconContainer","height","circleIcon","leftPane","paddingTop","backgroundColor","border","leftPaneSection","rightPane","overflowY","rightPaneTop","padding","modal","marginTop","marginLeft","marginRight","minHeight","MenuItem","button","margin","sectionListContainer","surveyListContainer","surveyListItem","palette","primary","light","cursor","sectionListItem","upload","createSurveyButton","centerDiv","form","inline","chart","postToServer","address","data","response","fetch","JSON","stringify","console","log","BatchSend","props","classes","partnerList","setPartnerList","stats","setStats","batchedTranscripts","setBatchedTranscripts","selectedUniIndex","setSelectedUniIndex","selectedUni","selectedUniName","partner_university","parse","localStorage","getItem","getStats","updateBatchedTranscripts","handleSendBatchedTranscripts","token","combinedHash","index","blockchain_address","file","e","mt","mb","textAlign","sent","recieved","dataEntry","value","title","Math","round","percentage","fontSize","color","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"react-bootstrap\";\nimport AppNavBar from \"../component/AppNavBar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Typography, Grid, Container as MUIContainer } from '@mui/material';\nimport { getPartnerStats } from \"../services/api\";\nimport { isAuthenticated } from \"../auth/auth\";\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { setTranscriptsToNotBatched, readBatchedInternalTranscripts } from \"../services/api\";\nimport hash from \"object-hash\";\nimport { sendTranscript } from \"../services/blockchain/contractCalls\";\nimport { startService } from \"../services/blockchain/util\";\nimport SelectionList from \"../component/SelectionList\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        //height: '89vh',\n        display: 'flex',\n        justifyContent: 'start',\n        //backgroundColor: theme.palette.primary.light,\n\n    },\n    textField: {\n        width: '100%',\n    },\n    questionContainer: {\n        width: '70%',\n    },\n    questionSectionContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n\n    addQuestionIconContainer: {\n        display: 'flex',\n        height: '12rem',\n    },\n    circleIcon: {\n        display: 'box',\n    },\n    leftPane: {\n        width: '60%',\n        paddingTop: '4rem',\n        backgroundColor: 'white',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        border: '1px grey solid'\n    },\n    leftPaneSection: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    rightPane: {\n        width: '100%',\n        display: 'flex',\n        overflowY: 'scroll',\n        flexDirection: 'column',\n    },\n    rightPaneTop: {\n        height: '14.5rem',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'white',\n        border: '1px grey solid',\n        padding: '2rem'\n    },\n\n    modal: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '15rem',\n        marginLeft: '30rem',\n        marginRight: '30rem',\n        minHeight: \"220px\",\n        width: \"40%\"\n    },\n    MenuItem: {\n        marginTop: \"30px\",\n    },\n    button: {\n        margin: \"2rem\",\n        justifyContent: 'center',\n    },\n    sectionListContainer: {\n        marginTop: '1rem',\n        height: '20rem',\n        width: '100%',\n        overflowY: 'scroll',\n    },\n    surveyListContainer: {\n        marginTop: '1rem',\n        height: '27.5rem',\n        width: '22rem',\n        overflowY: 'scroll',\n    },\n    surveyListItem: {\n        display: 'flex',\n        height: '4rem',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light,\n            cursor: 'pointer',\n        },\n    },\n    sectionListItem: {\n        'display': 'flex',\n        'justifyContent': 'center',\n        'height': '4rem',\n        'width': '70%',\n        'marginBottom': '0.5rem',\n        'marginTop': '0.5rem',\n        'alignItems': 'center',\n        '&:hover': {\n            'backgroundColor': theme.palette.primary.light,\n            'cursor': 'pointer',\n        },\n    },\n    upload: {\n        display: 'flex',\n        marginTop: '0.5rem',\n        height: '9rem',\n        width: '75%',\n    },\n    createSurveyButton: {\n        display: 'flex',\n        height: '3rem',\n        width: '15rem',\n    },\n    centerDiv: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '1rem',\n    },\n    form: {\n        margin: '1rem',\n        width: '40%'\n    },\n    inline: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    chart: {\n        height: '250px',\n    }\n}));\n\nconst postToServer = async (address, data) => {\n    const response = await fetch(address, {\n        'method': \"POST\",\n        'headers': {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        'body': JSON.stringify(data),\n    });\n    console.log('Sent transcripts to the foreign university server');\n    return response;\n};\n\nconst BatchSend = (props) => {\n    const classes = useStyles();\n    const [partnerList, setPartnerList] = useState([]);\n    const [stats, setStats] = useState({});\n    const [batchedTranscripts, setBatchedTranscripts] = useState([]);\n\n    const [selectedUniIndex, setSelectedUniIndex] = React.useState(-1);\n\n    const selectedUni = selectedUniIndex >= 0 ? partnerList[selectedUniIndex] : {};\n    const selectedUniName = selectedUniIndex >= 0 ? selectedUni.partner_university : \"all Universities\";\n\n    useEffect(() => {\n        setPartnerList(JSON.parse(localStorage.getItem('partnerUnis')));\n    }, []);\n\n    useEffect(() => {\n        const getStats = async () => {\n            setStats(await getPartnerStats(selectedUniName, isAuthenticated()));\n        };\n        const updateBatchedTranscripts = async () => {\n            setBatchedTranscripts(await readBatchedInternalTranscripts(isAuthenticated(), selectedUniName)); //receiverUni\n        };\n\n        getStats();\n        updateBatchedTranscripts();\n    }, [selectedUniName]);\n\n    const handleSendBatchedTranscripts = async () => {\n        console.log(`Sending batched transcripts to ${selectedUniName}`);\n\n        const token = isAuthenticated();\n        const combinedHash = hash(batchedTranscripts);\n\n        await startService();\n\n        try {\n            const index = await sendTranscript(combinedHash, selectedUni.blockchain_address);\n            for (var file of batchedTranscripts) {\n                console.log('file', file);\n                file.index = index;\n            }\n            await postToServer(\"http://localhost:4003/transcript/create\", batchedTranscripts); //receiverUni.server_address\n            await setTranscriptsToNotBatched(token, selectedUniName);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return (\n        <Container>\n            <AppNavBar></AppNavBar>\n\n            <MUIContainer maxWidth='sm' sx={{ mt: 5 }}>\n                <Typography sx={{ mb: 1 }}>\n                    Select a university to see some interaction statistics\n                </Typography>\n                <SelectionList options={partnerList} selection={selectedUniIndex} setSelection={setSelectedUniIndex} />\n                <Typography variant=\"h4\" style={{ textAlign: 'center', marginTop: 50 }}>Interaction with {selectedUniName}</Typography>\n            </MUIContainer>\n\n            <Grid container spacing={2} sx={{ mt: 10 }}>\n                <Grid item xs={6}>\n                    {stats.sent !== 0 || stats.recieved !== 0 ?\n                        <PieChart\n                            className={classes.chart}\n                            animate={true}\n                            label={({ dataEntry }) => dataEntry.value === 0 ? '' : `${dataEntry.title}: ${dataEntry.value} (${Math.round(dataEntry.percentage)}%)`}\n                            labelStyle={{ fontSize: '50%' }}\n                            data={[\n                                { title: 'Sent', value: stats.sent, color: '#E38627' },\n                                { title: 'Received', value: stats.recieved, color: '#C13C37' }\n                            ]}\n                        />\n                        : <Typography align=\"center\">No transcripts have been exchanged yet</Typography>\n                    }\n                </Grid>\n\n                <Grid item xs={6}>\n                    {selectedUniIndex >= 0 &&\n                        <div className={classes.questionSectionContainer}>\n                            <Typography>Number of batched transcripts: {batchedTranscripts.length}</Typography>\n                            <Button\n                                style={{ backgroundColor: \"rgb(53, 110, 255)\" }}\n                                variant=\"contained\"\n                                onClick={handleSendBatchedTranscripts}\n                                disabled={batchedTranscripts.length === 0}\n                            > Send Batched Transcripts\n                            </Button>\n                        </div>\n                    }\n                    {selectedUniIndex < 0 &&\n                        <div className={classes.questionSectionContainer}>\n                            <Typography>Number of partner universities: {partnerList.length}</Typography>\n                        </div>\n                    }\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nexport default connect()(withRouter(BatchSend));"]},"metadata":{},"sourceType":"module"}