{"ast":null,"code":"var _jsxFileName = \"/Users/bob/codes/mobility-blockchain-frontend/src/views/VerifyView.js\",\n    _s = $RefreshSig$();\n\nimport TranscriptCard from \"../component/TranscriptCard\";\nimport React, { useEffect, useState } from \"react\";\nimport DynamicCard from \"../component/DynamicCard\";\nimport AppNavBar from \"../component/AppNavBar\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport transcriptIcon from \"../img/transcript_icon.jpg\";\nimport failedIcon from \"../img/failed.jpeg\";\nimport successIcon from \"../img/success.png\";\nimport { readExternalTranscripts, updateTranscriptStatus, readBatchedByIndex } from \"../services/api\";\nimport { verifyTranscript } from \"../services/blockchain/contractCalls\";\nimport { hashTranscriptBatch, hashTranscripts } from \"../utils/accountUtils\";\nimport hash from 'object-hash';\nimport { startService } from \"../services/blockchain/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: \"20px\",\n    paddingTop: '80px'\n  },\n  searchBarContainer: {\n    paddingTop: '80px'\n  },\n  box: {\n    // margin: '0 2px',\n    // paddingTop: '-10px',\n    marginTop: '10px',\n    paddingLeft: '0px',\n    marginRight: '10px',\n    paddingRight: '25px',\n    position: \"relative\",\n    height: \"75vh\",\n    overflow: \"scroll\"\n  }\n}));\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    backgroundColor: \"#c0d1fcac\",\n    color: theme.palette.text.secondary\n  };\n}); // const verifyTranscriptOnBlockchain = async (item) => {\n//     let verificationStatus = await verifyTranscript(item, item._id);\n// }\n\nconst VerifyView = () => {\n  _s();\n\n  const classes = useStyles();\n  const [pendingTranscriptsList2, setPendingTranscriptsList2] = useState([]);\n  const [compeletedTranscriptsList2, setCompeletedTranscriptsList2] = useState([]);\n  const [cardSelectedInPendingTranscripts, changeCardSelectedInPendingTranscripts] = useState(-1);\n  const [cardSelectedInApprovedTranscripts, changeCardSelectedInApprovedTranscripts] = useState(-1);\n  const [openDialog1, setOpenDialog1] = useState(false);\n  const [openDialog2, setOpenDialog2] = useState(false);\n  const [openDialog3, setOpenDialog3] = useState(false);\n  const [verifyRequestCompleted, setVerifyRequestCompleted] = useState(false);\n  const [pendingRequestsSearchString, setPendingRequestsSearchString] = useState(\"\");\n  const [completedRequestsSearchString, setCompletedRequestsSearchString] = useState(\"\");\n  const [transcriptsInCurrentBatch, setTranscriptsInCurrentBatch] = useState([]);\n  const [currentTranscriptIdx, changeTranscriptIdx] = useState({});\n  useEffect(async () => {\n    let token = localStorage.getItem('jwt');\n    let transcripts = await readExternalTranscripts(token);\n    setPendingTranscriptsList2([]);\n    setCompeletedTranscriptsList2([]);\n    let pendingTranscriptCount = 0;\n    let completedTranscriptCount = 0;\n\n    for (const transcript of transcripts) {\n      if (transcript.hasOwnProperty(\"status_processing\") && transcript.status_processing === \"NOT VALADATING\") {\n        if (completedRequestsSearchString.length > 0) {\n          if (transcript.student_id.toLowerCase().startsWith(completedRequestsSearchString)) {\n            transcript.id = pendingTranscriptCount;\n            setPendingTranscriptsList2(pendingTranscriptsList2 => [...pendingTranscriptsList2, transcript]);\n            pendingTranscriptCount++;\n          }\n        } else {\n          transcript.id = pendingTranscriptCount;\n          setPendingTranscriptsList2(pendingTranscriptsList2 => [...pendingTranscriptsList2, transcript]);\n          pendingTranscriptCount++;\n        }\n      } else {\n        if (completedRequestsSearchString.length > 0) {\n          if (transcript.student_id.toLowerCase().startsWith(completedRequestsSearchString)) {\n            transcript.id = completedTranscriptCount;\n            setCompeletedTranscriptsList2(compeletedTranscriptsList2 => [...compeletedTranscriptsList2, transcript]);\n            completedTranscriptCount++;\n          }\n        } else {\n          transcript.id = completedTranscriptCount;\n          setCompeletedTranscriptsList2(compeletedTranscriptsList2 => [...compeletedTranscriptsList2, transcript]);\n          completedTranscriptCount++;\n        }\n      }\n    }\n\n    setVerifyRequestCompleted(false);\n  }, [verifyRequestCompleted, pendingRequestsSearchString, completedRequestsSearchString]);\n\n  const clickHandler1 = item => (changeCardSelectedInPendingTranscripts(item.id), changeCardSelectedInApprovedTranscripts(-1), setOpenDialog2(false), setOpenDialog3(false), setOpenDialog1(true), getCountOftranscriptsInCurrentBatch(item), changeTranscriptIdx(pendingTranscriptsList2[item.id]));\n\n  const clickHandler2 = item => (changeCardSelectedInApprovedTranscripts(item.id), changeCardSelectedInPendingTranscripts(-1), setOpenDialog1(false), setOpenDialog3(false), setOpenDialog2(true), changeTranscriptIdx(compeletedTranscriptsList2[item.id]));\n\n  const clickHandler3 = item => (changeCardSelectedInApprovedTranscripts(item.id), changeCardSelectedInPendingTranscripts(-1), setOpenDialog1(false), setOpenDialog2(false), setOpenDialog3(true), changeTranscriptIdx(compeletedTranscriptsList2[item.id]));\n\n  const handleClose = () => (setOpenDialog1(false), setOpenDialog2(false), setOpenDialog3(false));\n\n  const pendingRequestsSearcHandler = () => {\n    let elem = document.getElementById(\"pending-request-search\");\n    let value = elem.value;\n\n    if (value.length >= 3) {\n      setPendingRequestsSearchString(value);\n    }\n\n    if (value.length < 3) {\n      setPendingRequestsSearchString(\"\");\n    }\n  };\n\n  const completedRequestsSearcHandler = () => {\n    let elem = document.getElementById(\"completed-request-search\");\n    let value = elem.value;\n\n    if (value.length >= 3) {\n      setCompletedRequestsSearchString(value);\n    }\n\n    if (value.length < 3) {\n      setCompletedRequestsSearchString(\"\");\n    }\n  };\n\n  const getCountOftranscriptsInCurrentBatch = async transcript => {\n    let transcripts = await readBatchedByIndex(transcript.index, transcript.sending_university_username);\n    setTranscriptsInCurrentBatch(transcripts);\n  };\n\n  const handleVerifyRequest = async transcript => {\n    //verifyRequest()\n    setOpenDialog1(false);\n    setOpenDialog2(false);\n    setOpenDialog3(false);\n    const combinedHash = hashTranscripts(transcriptsInCurrentBatch);\n    await startService();\n    let verificationStatus = await verifyTranscript(combinedHash, transcript.index);\n\n    if (verificationStatus === true) {\n      for (const currTranscript of transcriptsInCurrentBatch) {\n        updateTranscriptStatus(currTranscript._id, \"VERIFIED\", localStorage.getItem('jwt'));\n      }\n    } else {\n      for (const currTranscript of transcriptsInCurrentBatch) {\n        updateTranscriptStatus(currTranscript._id, \"INVALID\", localStorage.getItem('jwt'));\n      }\n    }\n\n    setVerifyRequestCompleted(true); //Location().reload()\n  }; // const handleVerify = () => (\n  //\n  // );\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(AppNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      spacing: 6,\n      className: classes.searchBarContainer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 4,\n        direction: \"row\",\n        justifyContent: \"flex-end\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: \"-20px\"\n          },\n          children: \"Search : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"completed-request-search\",\n          label: \"Student Id (min 3 chars)\",\n          onKeyUp: () => completedRequestsSearcHandler(),\n          style: {\n            marginTop: \"-40px\",\n            paddingRight: \"50px\"\n          },\n          variant: \"filled\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 72\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 278\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      spacing: 6,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 6,\n        spacing: 4,\n        className: classes.box,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            marginTop: \"-90px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: \"#356EFF\"\n            },\n            children: [\"Pending Requests (\", pendingTranscriptsList2.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), pendingTranscriptsList2.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            onClick: () => clickHandler1(item),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: transcriptIcon,\n              width: \"25\",\n              height: \"35\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 76\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 126\n            }, this), item.student_id, \" - \", item.university, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 168\n            }, this), item.semester]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 6,\n        spacing: 4,\n        className: classes.box,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            marginTop: \"-90px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: \"#356EFF\"\n            },\n            children: [\"Completed Requests(\", compeletedTranscriptsList2.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this), compeletedTranscriptsList2.map(item => item.status_processing === \"VERIFIED\" ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            onClick: () => clickHandler2(item),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: successIcon,\n              width: \"35\",\n              height: \"35\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 89\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 136\n            }, this), item.student_id, \" - \", item.university, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 178\n            }, this), item.semester]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            onClick: () => clickHandler3(item),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: failedIcon,\n              width: \"35\",\n              height: \"35\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 94\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 140\n            }, this), item.student_id, \" - \", item.university, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 182\n            }, this), item.semester]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 34\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDialog1,\n        onClose: handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"alert-dialog-title\",\n          children: \"Verify Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          style: {\n            minWidth: \"350px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            id: \"alert-dialog-description\",\n            children: [\"Student Id : \", currentTranscriptIdx === null || currentTranscriptIdx === void 0 ? void 0 : currentTranscriptIdx.student_id, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 77\n            }, this), \"Semester : \", currentTranscriptIdx === null || currentTranscriptIdx === void 0 ? void 0 : currentTranscriptIdx.semester, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 73\n            }, this), \"Sending University username: \", currentTranscriptIdx === null || currentTranscriptIdx === void 0 ? void 0 : currentTranscriptIdx.sending_university_username, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 110\n            }, this), \"Receiving University username: \", currentTranscriptIdx === null || currentTranscriptIdx === void 0 ? void 0 : currentTranscriptIdx.receiving_university_username, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 114\n            }, this), \"Transcripts in the batch : \", transcriptsInCurrentBatch === null || transcriptsInCurrentBatch === void 0 ? void 0 : transcriptsInCurrentBatch.length, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 92\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 97\n            }, this), \"**note: all the transcripts in a single batch \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 75\n            }, this), \"will be sent for verification together\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 67\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleClose(),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleVerifyRequest(currentTranscriptIdx),\n            children: \"Verify Transcript(s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDialog2,\n        onClose: handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"alert-dialog-title\",\n          children: \"Successful Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          style: {\n            minWidth: \"300px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            id: \"alert-dialog-description\",\n            children: [\"Student Id : \", currentTranscriptIdx === null || currentTranscriptIdx === void 0 ? void 0 : currentTranscriptIdx.student_id, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 77\n            }, this), \"Semester : \", currentTranscriptIdx === null || currentTranscriptIdx === void 0 ? void 0 : currentTranscriptIdx.semester, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 73\n            }, this), \"Sending University username: \", currentTranscriptIdx === null || currentTranscriptIdx === void 0 ? void 0 : currentTranscriptIdx.sending_university_username, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 110\n            }, this), \"Receiving University username: \", currentTranscriptIdx === null || currentTranscriptIdx === void 0 ? void 0 : currentTranscriptIdx.receiving_university_username, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 114\n            }, this), \"Status - Transcript Validated \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleClose(),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDialog3,\n        onClose: handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"alert-dialog-title\",\n          children: \"Invalid Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          style: {\n            minWidth: \"300px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            id: \"alert-dialog-description\",\n            children: [\"Student Id : \", currentTranscriptIdx === null || currentTranscriptIdx === void 0 ? void 0 : currentTranscriptIdx.student_id, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 77\n            }, this), \"Semester : \", currentTranscriptIdx === null || currentTranscriptIdx === void 0 ? void 0 : currentTranscriptIdx.semester, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 73\n            }, this), \"Sending University username: \", currentTranscriptIdx === null || currentTranscriptIdx === void 0 ? void 0 : currentTranscriptIdx.sending_university_username, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 110\n            }, this), \"Receiving University username: \", currentTranscriptIdx === null || currentTranscriptIdx === void 0 ? void 0 : currentTranscriptIdx.receiving_university_username, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 114\n            }, this), \"Status - Invalid Transcript\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleClose(),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VerifyView, \"7VEzYYiBRg8opX9B49ZEKsSDXhg=\", false, function () {\n  return [useStyles];\n});\n\n_c = VerifyView;\nexport default VerifyView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifyView\");","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/src/views/VerifyView.js"],"names":["TranscriptCard","React","useEffect","useState","DynamicCard","AppNavBar","Col","Row","Container","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","makeStyles","styled","Box","Paper","Grid","Typography","transcriptIcon","failedIcon","successIcon","readExternalTranscripts","updateTranscriptStatus","readBatchedByIndex","verifyTranscript","hashTranscriptBatch","hashTranscripts","hash","startService","useStyles","theme","root","padding","paddingTop","searchBarContainer","box","marginTop","paddingLeft","marginRight","paddingRight","position","height","overflow","Item","typography","body2","spacing","textAlign","backgroundColor","color","palette","text","secondary","VerifyView","classes","pendingTranscriptsList2","setPendingTranscriptsList2","compeletedTranscriptsList2","setCompeletedTranscriptsList2","cardSelectedInPendingTranscripts","changeCardSelectedInPendingTranscripts","cardSelectedInApprovedTranscripts","changeCardSelectedInApprovedTranscripts","openDialog1","setOpenDialog1","openDialog2","setOpenDialog2","openDialog3","setOpenDialog3","verifyRequestCompleted","setVerifyRequestCompleted","pendingRequestsSearchString","setPendingRequestsSearchString","completedRequestsSearchString","setCompletedRequestsSearchString","transcriptsInCurrentBatch","setTranscriptsInCurrentBatch","currentTranscriptIdx","changeTranscriptIdx","token","localStorage","getItem","transcripts","pendingTranscriptCount","completedTranscriptCount","transcript","hasOwnProperty","status_processing","length","student_id","toLowerCase","startsWith","id","clickHandler1","item","getCountOftranscriptsInCurrentBatch","clickHandler2","clickHandler3","handleClose","pendingRequestsSearcHandler","elem","document","getElementById","value","completedRequestsSearcHandler","index","sending_university_username","handleVerifyRequest","combinedHash","verificationStatus","currTranscript","_id","map","university","semester","minWidth","receiving_university_username"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,6BAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAAQC,uBAAR,EAAiCC,sBAAjC,EAAyDC,kBAAzD,QAAkF,iBAAlF;AACA,SAAQC,gBAAR,QAA+B,sCAA/B;AACA,SAASC,mBAAT,EAA8BC,eAA9B,QAAqD,uBAArD;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,YAAT,QAA6B,6BAA7B;;AACA,MAAMC,SAAS,GAAGjB,UAAU,CAAEkB,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,UAAU,EAAE;AAFV,GAD+B;AAKrCC,EAAAA,kBAAkB,EAAE;AAChBD,IAAAA,UAAU,EAAE;AADI,GALiB;AAQrCE,EAAAA,GAAG,EAAE;AACD;AACA;AACAC,IAAAA,SAAS,EAAE,MAHV;AAIDC,IAAAA,WAAW,EAAE,KAJZ;AAKDC,IAAAA,WAAW,EAAE,MALZ;AAMDC,IAAAA,YAAY,EAAE,MANb;AAODC,IAAAA,QAAQ,EAAE,UAPT;AAQDC,IAAAA,MAAM,EAAE,MARP;AASDC,IAAAA,QAAQ,EAAE;AATT;AARgC,CAAZ,CAAD,CAA5B;AAqBA,MAAMC,IAAI,GAAG9B,MAAM,CAACE,KAAD,CAAN,CAAc;AAAA,MAAC;AAAEe,IAAAA;AAAF,GAAD;AAAA,SAAgB,EACvC,GAAGA,KAAK,CAACc,UAAN,CAAiBC,KADmB;AAEvCb,IAAAA,OAAO,EAAEF,KAAK,CAACgB,OAAN,CAAc,CAAd,CAF8B;AAGvCC,IAAAA,SAAS,EAAE,QAH4B;AAIvCC,IAAAA,eAAe,EAAE,WAJsB;AAKvCC,IAAAA,KAAK,EAAEnB,KAAK,CAACoB,OAAN,CAAcC,IAAd,CAAmBC;AALa,GAAhB;AAAA,CAAd,CAAb,C,CAQA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAMC,OAAO,GAAGzB,SAAS,EAAzB;AACA,QAAM,CAAC0B,uBAAD,EAA0BC,0BAA1B,IAAwDzD,QAAQ,CAAC,EAAD,CAAtE;AACA,QAAM,CAAC0D,0BAAD,EAA6BC,6BAA7B,IAA8D3D,QAAQ,CAAC,EAAD,CAA5E;AACA,QAAM,CAAC4D,gCAAD,EAAmCC,sCAAnC,IAA6E7D,QAAQ,CAAC,CAAC,CAAF,CAA3F;AACA,QAAM,CAAC8D,iCAAD,EAAoCC,uCAApC,IAA+E/D,QAAQ,CAAC,CAAC,CAAF,CAA7F;AACA,QAAM,CAACgE,WAAD,EAAcC,cAAd,IAAgCjE,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACkE,WAAD,EAAcC,cAAd,IAAgCnE,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACoE,WAAD,EAAcC,cAAd,IAAgCrE,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACsE,sBAAD,EAAyBC,yBAAzB,IAAsDvE,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAACwE,2BAAD,EAA8BC,8BAA9B,IAAgEzE,QAAQ,CAAC,EAAD,CAA9E;AACA,QAAM,CAAC0E,6BAAD,EAAgCC,gCAAhC,IAAoE3E,QAAQ,CAAC,EAAD,CAAlF;AACA,QAAM,CAAC4E,yBAAD,EAA4BC,4BAA5B,IAA4D7E,QAAQ,CAAC,EAAD,CAA1E;AACA,QAAM,CAAC8E,oBAAD,EAAuBC,mBAAvB,IAA8C/E,QAAQ,CAAC,EAAD,CAA5D;AAGAD,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIiF,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AACA,QAAIC,WAAW,GAAG,MAAM7D,uBAAuB,CAAC0D,KAAD,CAA/C;AAEAvB,IAAAA,0BAA0B,CAAC,EAAD,CAA1B;AACAE,IAAAA,6BAA6B,CAAC,EAAD,CAA7B;AACA,QAAIyB,sBAAsB,GAAG,CAA7B;AACA,QAAIC,wBAAwB,GAAG,CAA/B;;AACA,SAAK,MAAMC,UAAX,IAAyBH,WAAzB,EAAsC;AAElC,UAAGG,UAAU,CAACC,cAAX,CAA0B,mBAA1B,KAAkDD,UAAU,CAACE,iBAAX,KAAiC,gBAAtF,EAAwG;AACpG,YAAGd,6BAA6B,CAACe,MAA9B,GAAuC,CAA1C,EAA8C;AAC1C,cAAGH,UAAU,CAACI,UAAX,CAAsBC,WAAtB,GAAoCC,UAApC,CAAgDlB,6BAAhD,CAAH,EAAmF;AAC/EY,YAAAA,UAAU,CAACO,EAAX,GAAgBT,sBAAhB;AACA3B,YAAAA,0BAA0B,CAACD,uBAAuB,IAAI,CAAC,GAAGA,uBAAJ,EAA6B8B,UAA7B,CAA5B,CAA1B;AACAF,YAAAA,sBAAsB;AACzB;AACJ,SAND,MAMO;AACHE,UAAAA,UAAU,CAACO,EAAX,GAAgBT,sBAAhB;AACA3B,UAAAA,0BAA0B,CAACD,uBAAuB,IAAI,CAAC,GAAGA,uBAAJ,EAA6B8B,UAA7B,CAA5B,CAA1B;AACAF,UAAAA,sBAAsB;AACzB;AACJ,OAZD,MAYO;AACH,YAAGV,6BAA6B,CAACe,MAA9B,GAAuC,CAA1C,EAA8C;AAC1C,cAAGH,UAAU,CAACI,UAAX,CAAsBC,WAAtB,GAAoCC,UAApC,CAAgDlB,6BAAhD,CAAH,EAAmF;AAC/EY,YAAAA,UAAU,CAACO,EAAX,GAAgBR,wBAAhB;AACA1B,YAAAA,6BAA6B,CAAED,0BAA0B,IAAI,CAAC,GAAGA,0BAAJ,EAAgC4B,UAAhC,CAAhC,CAA7B;AACAD,YAAAA,wBAAwB;AAC3B;AACJ,SAND,MAMO;AACHC,UAAAA,UAAU,CAACO,EAAX,GAAgBR,wBAAhB;AACA1B,UAAAA,6BAA6B,CAAED,0BAA0B,IAAI,CAAC,GAAGA,0BAAJ,EAAgC4B,UAAhC,CAAhC,CAA7B;AACAD,UAAAA,wBAAwB;AAC3B;AAEJ;AACJ;;AACDd,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AAEC,GAvCI,EAuCH,CAACD,sBAAD,EAAyBE,2BAAzB,EAAsDE,6BAAtD,CAvCG,CAAT;;AA0CA,QAAMoB,aAAa,GAAIC,IAAD,KAClBlC,sCAAsC,CAACkC,IAAI,CAACF,EAAN,CAAtC,EACI9B,uCAAuC,CAAC,CAAC,CAAF,CAD3C,EAEII,cAAc,CAAC,KAAD,CAFlB,EAGIE,cAAc,CAAC,KAAD,CAHlB,EAIIJ,cAAc,CAAC,IAAD,CAJlB,EAKI+B,mCAAmC,CAACD,IAAD,CALvC,EAMIhB,mBAAmB,CAACvB,uBAAuB,CAACuC,IAAI,CAACF,EAAN,CAAxB,CAPL,CAAtB;;AASA,QAAMI,aAAa,GAAIF,IAAD,KAClBhC,uCAAuC,CAACgC,IAAI,CAACF,EAAN,CAAvC,EACAhC,sCAAsC,CAAC,CAAC,CAAF,CADtC,EAEAI,cAAc,CAAC,KAAD,CAFd,EAGAI,cAAc,CAAC,KAAD,CAHd,EAIAF,cAAc,CAAC,IAAD,CAJd,EAKAY,mBAAmB,CAACrB,0BAA0B,CAACqC,IAAI,CAACF,EAAN,CAA3B,CAND,CAAtB;;AAUA,QAAMK,aAAa,GAAIH,IAAD,KAClBhC,uCAAuC,CAACgC,IAAI,CAACF,EAAN,CAAvC,EACAhC,sCAAsC,CAAC,CAAC,CAAF,CADtC,EAEAI,cAAc,CAAC,KAAD,CAFd,EAGAE,cAAc,CAAC,KAAD,CAHd,EAIAE,cAAc,CAAC,IAAD,CAJd,EAKAU,mBAAmB,CAACrB,0BAA0B,CAACqC,IAAI,CAACF,EAAN,CAA3B,CAND,CAAtB;;AAWA,QAAMM,WAAW,GAAG,OAChBlC,cAAc,CAAC,KAAD,CAAd,EACAE,cAAc,CAAC,KAAD,CADd,EAEAE,cAAc,CAAC,KAAD,CAHE,CAApB;;AAMA,QAAM+B,2BAA2B,GAAG,MAAM;AACtC,QAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,wBAAxB,CAAX;AACA,QAAIC,KAAK,GAAGH,IAAI,CAACG,KAAjB;;AACA,QAAGA,KAAK,CAACf,MAAN,IAAgB,CAAnB,EAAsB;AAClBhB,MAAAA,8BAA8B,CAAC+B,KAAD,CAA9B;AACH;;AACD,QAAGA,KAAK,CAACf,MAAN,GAAe,CAAlB,EAAqB;AACjBhB,MAAAA,8BAA8B,CAAC,EAAD,CAA9B;AACH;AACJ,GATD;;AAWA,QAAMgC,6BAA6B,GAAG,MAAM;AACxC,QAAIJ,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,0BAAxB,CAAX;AACA,QAAIC,KAAK,GAAGH,IAAI,CAACG,KAAjB;;AACA,QAAGA,KAAK,CAACf,MAAN,IAAgB,CAAnB,EAAsB;AAClBd,MAAAA,gCAAgC,CAAC6B,KAAD,CAAhC;AACH;;AACD,QAAGA,KAAK,CAACf,MAAN,GAAe,CAAlB,EAAqB;AACjBd,MAAAA,gCAAgC,CAAC,EAAD,CAAhC;AACH;AACJ,GATD;;AAWA,QAAMqB,mCAAmC,GAAG,MAAOV,UAAP,IAAsB;AAC9D,QAAIH,WAAW,GAAG,MAAM3D,kBAAkB,CAAC8D,UAAU,CAACoB,KAAZ,EAAmBpB,UAAU,CAACqB,2BAA9B,CAA1C;AACA9B,IAAAA,4BAA4B,CAACM,WAAD,CAA5B;AACH,GAHD;;AAKA,QAAMyB,mBAAmB,GAAG,MAAOtB,UAAP,IAAsB;AAC9C;AACArB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACIE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,cAAc,CAAC,KAAD,CAAd;AAEJ,UAAMwC,YAAY,GAAGlF,eAAe,CAACiD,yBAAD,CAApC;AAEA,UAAM/C,YAAY,EAAlB;AACA,QAAIiF,kBAAkB,GAAG,MAAMrF,gBAAgB,CAACoF,YAAD,EAAevB,UAAU,CAACoB,KAA1B,CAA/C;;AACA,QAAGI,kBAAkB,KAAG,IAAxB,EAA8B;AAC1B,WAAI,MAAMC,cAAV,IAA4BnC,yBAA5B,EAAuD;AACnDrD,QAAAA,sBAAsB,CAACwF,cAAc,CAACC,GAAhB,EAAqB,UAArB,EAAiC/B,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAjC,CAAtB;AACH;AACJ,KAJD,MAIO;AACH,WAAI,MAAM6B,cAAV,IAA4BnC,yBAA5B,EAAuD;AACnDrD,QAAAA,sBAAsB,CAACwF,cAAc,CAACC,GAAhB,EAAqB,SAArB,EAAgC/B,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAhC,CAAtB;AACH;AACJ;;AACDX,IAAAA,yBAAyB,CAAC,IAAD,CAAzB,CAnB8C,CAoB9C;AACH,GArBD,CA1HqB,CAkJrB;AACA;AACA;;;AACA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,EAAE,EAAE,EAApB;AAAwB,MAAA,OAAO,EAAE,CAAjC;AAAoC,MAAA,SAAS,EAAEhB,OAAO,CAACpB,kBAAvD;AAAA,6BAEI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,EAAE,EAAE,EAAzB;AAA6B,QAAA,OAAO,EAAE,CAAtC;AAAyC,QAAA,SAAS,EAAC,KAAnD;AAAyD,QAAA,cAAc,EAAC,UAAxE;AAAmF,QAAA,UAAU,EAAC,YAA9F;AAAA,gCACI;AAAG,UAAA,KAAK,EAAE;AAACE,YAAAA,SAAS,EAAE;AAAZ,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,uBACuD,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,0BAAd;AAAyC,UAAA,KAAK,EAAC,0BAA/C;AAA0E,UAAA,OAAO,EAAE,MAAMoE,6BAA6B,EAAtH;AAA0H,UAAA,KAAK,EAAE;AAACpE,YAAAA,SAAS,EAAE,OAAZ;AAAqBG,YAAAA,YAAY,EAAE;AAAnC,WAAjI;AAA6K,UAAA,OAAO,EAAC,QAArL;AAA8L,UAAA,IAAI,EAAE;AAApM;AAAA;AAAA;AAAA;AAAA,gBADvD,eACqQ;AAAA;AAAA;AAAA;AAAA,gBADrQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAWI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,EAAE,EAAE,EAApB;AAAwB,MAAA,OAAO,EAAE,CAAjC;AAAoC,MAAA,SAAS,EAAEe,OAAO,CAACvB,IAAvD;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,EAAE,EAAE,CAAzB;AAA4B,QAAA,OAAO,EAAE,CAArC;AAAwC,QAAA,SAAS,EAAEuB,OAAO,CAACnB,GAA3D;AAAgE,QAAA,SAAS,EAAC,KAA1E;AAAgF,QAAA,cAAc,EAAC,QAA/F;AAAwG,QAAA,UAAU,EAAE,YAApH;AAAA,gCAEI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAA1B;AAAA,iCAAgD;AAAI,YAAA,KAAK,EAAE;AAACa,cAAAA,KAAK,EAAG;AAAT,aAAX;AAAA,6CAAmDM,uBAAuB,CAACiC,MAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGSjC,uBAAuB,CAACyD,GAAxB,CAA6BlB,IAAI,iBAC9B,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCAEI,QAAC,IAAD;AAAM,YAAA,OAAO,EAAE,MAAMD,aAAa,CAACC,IAAD,CAAlC;AAAA,oCAA2C;AAAK,cAAA,GAAG,EAAE5E,cAAV;AAA0B,cAAA,KAAK,EAAC,IAAhC;AAAqC,cAAA,MAAM,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,oBAA3C,eAA6F;AAAA;AAAA;AAAA;AAAA,oBAA7F,EAAmG4E,IAAI,CAACL,UAAxG,SAAuHK,IAAI,CAACmB,UAA5H,eAAuI;AAAA;AAAA;AAAA;AAAA,oBAAvI,EAA6InB,IAAI,CAACoB,QAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADH,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYQ,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,EAAE,EAAE,CAAzB;AAA4B,QAAA,OAAO,EAAE,CAArC;AAAwC,QAAA,SAAS,EAAE5D,OAAO,CAACnB,GAA3D;AAAgE,QAAA,SAAS,EAAC,KAA1E;AAAgF,QAAA,cAAc,EAAC,QAA/F;AAAwG,QAAA,UAAU,EAAC,YAAnH;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAA1B;AAAA,iCAAgD;AAAI,YAAA,KAAK,EAAE;AAACa,cAAAA,KAAK,EAAG;AAAT,aAAX;AAAA,8CAAoDQ,0BAA0B,CAAC+B,MAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK/B,0BAA0B,CAACuD,GAA3B,CAAgClB,IAAI,IAAIA,IAAI,CAACP,iBAAL,KAA2B,UAA3B,gBAErC,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCAAkB,QAAC,IAAD;AAAM,YAAA,OAAO,EAAE,MAAMS,aAAa,CAACF,IAAD,CAAlC;AAAA,oCAA0C;AAAK,cAAA,GAAG,EAAE1E,WAAV;AAAuB,cAAA,KAAK,EAAC,IAA7B;AAAkC,cAAA,MAAM,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAA1C,eAAyF;AAAA;AAAA;AAAA;AAAA,oBAAzF,EAA+F0E,IAAI,CAACL,UAApG,SAAmHK,IAAI,CAACmB,UAAxH,eAAmI;AAAA;AAAA;AAAA;AAAA,oBAAnI,EAAyInB,IAAI,CAACoB,QAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFqC,gBAIhC,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCAAkB,QAAC,IAAD;AAAM,YAAA,OAAO,EAAE,MAAMjB,aAAa,CAACH,IAAD,CAAlC;AAAA,oCAA0C;AAAK,cAAA,GAAG,EAAE3E,UAAV;AAAsB,cAAA,KAAK,EAAC,IAA5B;AAAiC,cAAA,MAAM,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,oBAA1C,eAAwF;AAAA;AAAA;AAAA;AAAA,oBAAxF,EAA8F2E,IAAI,CAACL,UAAnG,SAAkHK,IAAI,CAACmB,UAAvH,eAAkI;AAAA;AAAA;AAAA;AAAA,oBAAlI,EAAwInB,IAAI,CAACoB,QAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAJR,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAZR;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAkCI;AAAA,6BACI,QAAC,MAAD;AACI,QAAA,IAAI,EAAEnD,WADV;AAEI,QAAA,OAAO,EAAEmC,WAFb;AAGI,2BAAgB,oBAHpB;AAII,4BAAiB,0BAJrB;AAAA,gCAOI,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,oBAAhB;AAAA,oBACK;AADL;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI,QAAC,aAAD;AAAe,UAAA,KAAK,EAAE;AAACiB,YAAAA,QAAQ,EAAG;AAAZ,WAAtB;AAAA,iCACI,QAAC,iBAAD;AAAmB,YAAA,EAAE,EAAC,0BAAtB;AAAA,wCACkBtC,oBADlB,aACkBA,oBADlB,uBACkBA,oBAAoB,CAAEY,UADxC,oBACoD;AAAA;AAAA;AAAA;AAAA,oBADpD,iBAEgBZ,oBAFhB,aAEgBA,oBAFhB,uBAEgBA,oBAAoB,CAAEqC,QAFtC,oBAEgD;AAAA;AAAA;AAAA;AAAA,oBAFhD,mCAGkCrC,oBAHlC,aAGkCA,oBAHlC,uBAGkCA,oBAAoB,CAAE6B,2BAHxD,oBAGqF;AAAA;AAAA;AAAA;AAAA,oBAHrF,qCAIoC7B,oBAJpC,aAIoCA,oBAJpC,uBAIoCA,oBAAoB,CAAEuC,6BAJ1D,oBAIyF;AAAA;AAAA;AAAA;AAAA,oBAJzF,iCAKgCzC,yBALhC,aAKgCA,yBALhC,uBAKgCA,yBAAyB,CAAEa,MAL3D,oBAKmE;AAAA;AAAA;AAAA;AAAA,oBALnE,eAKwE;AAAA;AAAA;AAAA;AAAA,oBALxE,iEAMkD;AAAA;AAAA;AAAA;AAAA,oBANlD,yDAO0C;AAAA;AAAA;AAAA;AAAA,oBAP1C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAqBI,QAAC,aAAD;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMU,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMS,mBAAmB,CAAC9B,oBAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlCJ,eA+DI;AAAA,6BACI,QAAC,MAAD;AACI,QAAA,IAAI,EAAEZ,WADV;AAEI,QAAA,OAAO,EAAEiC,WAFb;AAGI,2BAAgB,oBAHpB;AAII,4BAAiB,0BAJrB;AAAA,gCAMI,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,oBAAhB;AAAA,oBACK;AADL;AAAA;AAAA;AAAA;AAAA,gBANJ,eASI,QAAC,aAAD;AAAe,UAAA,KAAK,EAAE;AAACiB,YAAAA,QAAQ,EAAG;AAAZ,WAAtB;AAAA,iCACI,QAAC,iBAAD;AAAmB,YAAA,EAAE,EAAC,0BAAtB;AAAA,wCACkBtC,oBADlB,aACkBA,oBADlB,uBACkBA,oBAAoB,CAAEY,UADxC,oBACoD;AAAA;AAAA;AAAA;AAAA,oBADpD,iBAEgBZ,oBAFhB,aAEgBA,oBAFhB,uBAEgBA,oBAAoB,CAAEqC,QAFtC,oBAEgD;AAAA;AAAA;AAAA;AAAA,oBAFhD,mCAGkCrC,oBAHlC,aAGkCA,oBAHlC,uBAGkCA,oBAAoB,CAAE6B,2BAHxD,oBAGqF;AAAA;AAAA;AAAA;AAAA,oBAHrF,qCAIoC7B,oBAJpC,aAIoCA,oBAJpC,uBAIoCA,oBAAoB,CAAEuC,6BAJ1D,oBAIyF;AAAA;AAAA;AAAA;AAAA,oBAJzF,iDAKkC;AAAA;AAAA;AAAA;AAAA,oBALlC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ,eAkBI,QAAC,aAAD;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMlB,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA/DJ,eAwFI;AAAA,6BACI,QAAC,MAAD;AACI,QAAA,IAAI,EAAE/B,WADV;AAEI,QAAA,OAAO,EAAE+B,WAFb;AAGI,2BAAgB,oBAHpB;AAII,4BAAiB,0BAJrB;AAAA,gCAMI,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,oBAAhB;AAAA,oBACK;AADL;AAAA;AAAA;AAAA;AAAA,gBANJ,eASI,QAAC,aAAD;AAAe,UAAA,KAAK,EAAE;AAACiB,YAAAA,QAAQ,EAAG;AAAZ,WAAtB;AAAA,iCACI,QAAC,iBAAD;AAAmB,YAAA,EAAE,EAAC,0BAAtB;AAAA,wCACkBtC,oBADlB,aACkBA,oBADlB,uBACkBA,oBAAoB,CAAEY,UADxC,oBACoD;AAAA;AAAA;AAAA;AAAA,oBADpD,iBAEgBZ,oBAFhB,aAEgBA,oBAFhB,uBAEgBA,oBAAoB,CAAEqC,QAFtC,oBAEgD;AAAA;AAAA;AAAA;AAAA,oBAFhD,mCAGkCrC,oBAHlC,aAGkCA,oBAHlC,uBAGkCA,oBAAoB,CAAE6B,2BAHxD,oBAGqF;AAAA;AAAA;AAAA;AAAA,oBAHrF,qCAIoC7B,oBAJpC,aAIoCA,oBAJpC,uBAIoCA,oBAAoB,CAAEuC,6BAJ1D,oBAIyF;AAAA;AAAA;AAAA;AAAA,oBAJzF,8CAK+B;AAAA;AAAA;AAAA;AAAA,oBAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ,eAkBI,QAAC,aAAD;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMlB,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAxFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoHH,CAzQD;;GAAM7C,U;UAEcxB,S;;;KAFdwB,U;AA2QN,eAAeA,UAAf","sourcesContent":["import TranscriptCard from \"../component/TranscriptCard\";\nimport React, { useEffect, useState } from \"react\";\nimport DynamicCard from \"../component/DynamicCard\";\nimport AppNavBar from \"../component/AppNavBar\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport transcriptIcon from \"../img/transcript_icon.jpg\";\nimport failedIcon from \"../img/failed.jpeg\";\nimport successIcon from \"../img/success.png\";\nimport {readExternalTranscripts, updateTranscriptStatus, readBatchedByIndex} from \"../services/api\"\nimport {verifyTranscript} from \"../services/blockchain/contractCalls\";\nimport { hashTranscriptBatch, hashTranscripts } from \"../utils/accountUtils\";\nimport hash from 'object-hash'\nimport { startService } from \"../services/blockchain/util\";\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: \"20px\",\n        paddingTop: '80px',\n    },\n    searchBarContainer: {\n        paddingTop: '80px'\n    },\n    box: {\n        // margin: '0 2px',\n        // paddingTop: '-10px',\n        marginTop: '10px',\n        paddingLeft: '0px',\n        marginRight: '10px',\n        paddingRight: '25px',\n        position: \"relative\",\n        height: \"75vh\",\n        overflow: \"scroll\"\n    },\n}));\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    backgroundColor: \"#c0d1fcac\",\n    color: theme.palette.text.secondary\n}));\n\n// const verifyTranscriptOnBlockchain = async (item) => {\n//     let verificationStatus = await verifyTranscript(item, item._id);\n// }\n\nconst VerifyView = () => {\n\n    const classes = useStyles();\n    const [pendingTranscriptsList2, setPendingTranscriptsList2] = useState([]);\n    const [compeletedTranscriptsList2, setCompeletedTranscriptsList2] = useState([]);\n    const [cardSelectedInPendingTranscripts, changeCardSelectedInPendingTranscripts] = useState(-1);\n    const [cardSelectedInApprovedTranscripts, changeCardSelectedInApprovedTranscripts] = useState(-1);\n    const [openDialog1, setOpenDialog1] = useState(false);\n    const [openDialog2, setOpenDialog2] = useState(false);\n    const [openDialog3, setOpenDialog3] = useState(false);\n    const [verifyRequestCompleted, setVerifyRequestCompleted] = useState(false);\n    const [pendingRequestsSearchString, setPendingRequestsSearchString] = useState(\"\");\n    const [completedRequestsSearchString, setCompletedRequestsSearchString] = useState(\"\");\n    const [transcriptsInCurrentBatch, setTranscriptsInCurrentBatch] = useState([]);\n    const [currentTranscriptIdx, changeTranscriptIdx] = useState({});\n\n\n    useEffect(async () => {\n        let token = localStorage.getItem('jwt');\n        let transcripts = await readExternalTranscripts(token);\n\n        setPendingTranscriptsList2([]);\n        setCompeletedTranscriptsList2([]);\n        let pendingTranscriptCount = 0;\n        let completedTranscriptCount = 0;\n        for (const transcript of transcripts) {\n\n            if(transcript.hasOwnProperty(\"status_processing\") && transcript.status_processing === \"NOT VALADATING\") {\n                if(completedRequestsSearchString.length > 0 ) {\n                    if(transcript.student_id.toLowerCase().startsWith( completedRequestsSearchString)) {\n                        transcript.id = pendingTranscriptCount;\n                        setPendingTranscriptsList2(pendingTranscriptsList2 => [...pendingTranscriptsList2, transcript]);\n                        pendingTranscriptCount++;\n                    }\n                } else {\n                    transcript.id = pendingTranscriptCount;\n                    setPendingTranscriptsList2(pendingTranscriptsList2 => [...pendingTranscriptsList2, transcript]);\n                    pendingTranscriptCount++;\n                }\n            } else {\n                if(completedRequestsSearchString.length > 0 ) {\n                    if(transcript.student_id.toLowerCase().startsWith( completedRequestsSearchString)) {\n                        transcript.id = completedTranscriptCount;\n                        setCompeletedTranscriptsList2( compeletedTranscriptsList2 => [...compeletedTranscriptsList2, transcript]);\n                        completedTranscriptCount++;\n                    }\n                } else {\n                    transcript.id = completedTranscriptCount;\n                    setCompeletedTranscriptsList2( compeletedTranscriptsList2 => [...compeletedTranscriptsList2, transcript]);\n                    completedTranscriptCount++;\n                }\n                \n            }\n        }\n        setVerifyRequestCompleted(false);\n\n        },[verifyRequestCompleted, pendingRequestsSearchString, completedRequestsSearchString]);\n\n\n    const clickHandler1 = (item) => (\n        changeCardSelectedInPendingTranscripts(item.id),\n            changeCardSelectedInApprovedTranscripts(-1),\n            setOpenDialog2(false),\n            setOpenDialog3(false),\n            setOpenDialog1(true),\n            getCountOftranscriptsInCurrentBatch(item),\n            changeTranscriptIdx(pendingTranscriptsList2[item.id])\n    );\n    const clickHandler2 = (item) => (\n        changeCardSelectedInApprovedTranscripts(item.id),\n        changeCardSelectedInPendingTranscripts(-1),\n        setOpenDialog1(false),\n        setOpenDialog3(false),\n        setOpenDialog2(true),\n        changeTranscriptIdx(compeletedTranscriptsList2[item.id])\n\n    );\n\n    const clickHandler3 = (item) => (\n        changeCardSelectedInApprovedTranscripts(item.id),\n        changeCardSelectedInPendingTranscripts(-1),\n        setOpenDialog1(false),\n        setOpenDialog2(false),\n        setOpenDialog3(true),\n        changeTranscriptIdx(compeletedTranscriptsList2[item.id])\n    );\n    \n\n\n    const handleClose = () => (\n        setOpenDialog1(false),\n        setOpenDialog2(false),\n        setOpenDialog3(false)\n    );\n    \n    const pendingRequestsSearcHandler = () => {\n        let elem = document.getElementById(\"pending-request-search\");\n        let value = elem.value;\n        if(value.length >= 3) {\n            setPendingRequestsSearchString(value);\n        } \n        if(value.length < 3) {\n            setPendingRequestsSearchString(\"\");\n        }\n    }\n\n    const completedRequestsSearcHandler = () => {\n        let elem = document.getElementById(\"completed-request-search\");\n        let value = elem.value;\n        if(value.length >= 3) {\n            setCompletedRequestsSearchString(value);\n        }\n        if(value.length < 3) {\n            setCompletedRequestsSearchString(\"\");\n        }\n    }\n\n    const getCountOftranscriptsInCurrentBatch = async (transcript) => {\n        let transcripts = await readBatchedByIndex(transcript.index, transcript.sending_university_username);\n        setTranscriptsInCurrentBatch(transcripts);\n    }\n    \n    const handleVerifyRequest = async (transcript) => {\n        //verifyRequest()\n        setOpenDialog1(false);\n            setOpenDialog2(false);\n            setOpenDialog3(false);\n\n        const combinedHash = hashTranscripts(transcriptsInCurrentBatch)\n\n        await startService();\n        let verificationStatus = await verifyTranscript(combinedHash, transcript.index);\n        if(verificationStatus===true) {\n            for(const currTranscript of transcriptsInCurrentBatch) {\n                updateTranscriptStatus(currTranscript._id, \"VERIFIED\", localStorage.getItem('jwt'));\n            }\n        } else {\n            for(const currTranscript of transcriptsInCurrentBatch) {\n                updateTranscriptStatus(currTranscript._id, \"INVALID\", localStorage.getItem('jwt'));\n            }\n        }\n        setVerifyRequestCompleted(true);\n        //Location().reload()\n    }\n\n\n    // const handleVerify = () => (\n    //\n    // );\n    return (\n        <Container>\n            <AppNavBar />\n\n            {/*<TextField id=\"standard-basic\" label=\"Student Id or University Name\" variant=\"standard\" />*/}\n            {/*<h2 style={{color : \"#356EFF\"}}>Verify Transcripts</h2>*/}\n            <Grid container xs={12} spacing={6} className={classes.searchBarContainer}>\n                \n                <Grid container item xs={12} spacing={4} direction=\"row\" justifyContent=\"flex-end\" alignItems=\"flex-start\">\n                    <p style={{marginTop: \"-20px\"}}>Search : </p>&nbsp;<TextField id=\"completed-request-search\" label=\"Student Id (min 3 chars)\" onKeyUp={() => completedRequestsSearcHandler()} style={{marginTop: \"-40px\", paddingRight: \"50px\"}} variant=\"filled\" size={\"small\"}/><br/>\n                </Grid>\n            </Grid>\n            <Grid container xs={12} spacing={6} className={classes.root}>\n                <Grid container item xs={6} spacing={4} className={classes.box} direction=\"row\" justifyContent=\"center\" alignItems={\"flex-start\"}>\n                    {/*Search By : <TextField id=\"standard-basic\" label=\"Student Id or Uni Name\" style={{marginTop: \"-40px\"}} variant=\"filled\" size={\"normal\"}/><br/>*/}\n                    <Grid item xs={12} style={{marginTop: \"-90px\"}}><h4 style={{color : \"#356EFF\"}}>Pending Requests ({pendingTranscriptsList2.length})</h4></Grid>\n                        {pendingTranscriptsList2.map((item => (\n                            <Grid item xs={4}>\n                                \n                                <Item onClick={() => clickHandler1(item)} ><img src={transcriptIcon} width=\"25\" height=\"35\"/><br/>{item.student_id} - {item.university}<br/>{item.semester}</Item>\n                                \n                            </Grid>\n                            )))}\n                    </Grid>\n                    <Grid container item xs={6} spacing={4} className={classes.box} direction=\"row\" justifyContent=\"center\" alignItems=\"flex-start\">\n                        <Grid item xs={12} style={{marginTop: \"-90px\"}}><h4 style={{color : \"#356EFF\"}}>Completed Requests({compeletedTranscriptsList2.length})</h4></Grid>\n                        {compeletedTranscriptsList2.map((item => item.status_processing === \"VERIFIED\"? (\n\n                            <Grid item xs={4}><Item onClick={() => clickHandler2(item)}><img src={successIcon} width=\"35\" height=\"35\"/><br/>{item.student_id} - {item.university}<br/>{item.semester}</Item></Grid>\n                        ) :\n                                (<Grid item xs={4}><Item onClick={() => clickHandler3(item)}><img src={failedIcon} width=\"35\" height=\"35\"/><br/>{item.student_id} - {item.university}<br/>{item.semester}</Item></Grid>)\n                        ))}\n                    </Grid>\n            </Grid>\n\n            <div>\n                <Dialog\n                    open={openDialog1}\n                    onClose={handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    \n                >\n                    <DialogTitle id=\"alert-dialog-title\">\n                        {\"Verify Request\"}\n                    </DialogTitle>\n                    <DialogContent style={{minWidth : \"350px\"}}>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Student Id : {currentTranscriptIdx?.student_id} <br/>\n                            Semester : {currentTranscriptIdx?.semester} <br/>\n                            Sending University username: {currentTranscriptIdx?.sending_university_username} <br/>\n                            Receiving University username: {currentTranscriptIdx?.receiving_university_username} <br/>\n                            Transcripts in the batch : {transcriptsInCurrentBatch?.length} <br/><br/>\n                            **note: all the transcripts in a single batch <br/>\n                            will be sent for verification together<br/>\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => handleClose()}>Close</Button>\n                        <Button onClick={() => handleVerifyRequest(currentTranscriptIdx)}>Verify Transcript(s)</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n\n            <div>\n                <Dialog\n                    open={openDialog2}\n                    onClose={handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">\n                        {\"Successful Request\"}\n                    </DialogTitle>\n                    <DialogContent style={{minWidth : \"300px\"}}>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Student Id : {currentTranscriptIdx?.student_id} <br/>\n                            Semester : {currentTranscriptIdx?.semester} <br/>\n                            Sending University username: {currentTranscriptIdx?.sending_university_username} <br/>\n                            Receiving University username: {currentTranscriptIdx?.receiving_university_username} <br/>\n                            Status - Transcript Validated <br/>\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => handleClose()}>Close</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n\n            <div>\n                <Dialog\n                    open={openDialog3}\n                    onClose={handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">\n                        {\"Invalid Request\"}\n                    </DialogTitle>\n                    <DialogContent style={{minWidth : \"300px\"}}>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Student Id : {currentTranscriptIdx?.student_id} <br/>\n                            Semester : {currentTranscriptIdx?.semester} <br/>\n                            Sending University username: {currentTranscriptIdx?.sending_university_username} <br/>\n                            Receiving University username: {currentTranscriptIdx?.receiving_university_username} <br/>\n                            Status - Invalid Transcript<br/>\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => handleClose()}>Close</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n\n        </Container>\n    );\n};\n\nexport default VerifyView;\n"]},"metadata":{},"sourceType":"module"}