{"ast":null,"code":"export const readNounce = publicAddress => {\n  return fetch(`http://localhost:4000/user/nounce/${publicAddress}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const userLogin = (publicAddress, sign) => {\n  return fetch(`http://localhost:4000/user/login`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      sign: sign,\n      metamask_address: publicAddress\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const registerUser = (publicAddress, username) => {\n  return fetch(`http://localhost:4000/user/create`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username: username,\n      metamask_address: publicAddress\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const readUser = publicAddress => {\n  return fetch(`http://localhost:4000/user/nounce/${publicAddress}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/src/api.js"],"names":["readNounce","publicAddress","fetch","method","headers","Accept","then","response","json","catch","err","console","log","userLogin","sign","body","JSON","stringify","metamask_address","registerUser","username","readUser"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,aAAD,IAAmB;AACzC,SAAOC,KAAK,CAAE,qCAAoCD,aAAc,EAApD,EAAuD;AAC/DE,IAAAA,MAAM,EAAE,KADuD;AAE/DC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX;AAFsD,GAAvD,CAAL,CAOFC,IAPE,CAOIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GATE,EAUFC,KAVE,CAUKC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVb,CAAP;AAWH,CAZM;AAcP,OAAO,MAAMG,SAAS,GAAG,CAACZ,aAAD,EAAgBa,IAAhB,KAAyB;AAC9C,SAAOZ,KAAK,CAAE,kCAAF,EAAqC;AAC7CC,IAAAA,MAAM,EAAE,MADqC;AAE7CC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFoC;AAM7CU,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBH,MAAAA,IAAI,EAAEA,IADW;AAEjBI,MAAAA,gBAAgB,EAAEjB;AAFD,KAAf;AANuC,GAArC,CAAL,CAWFK,IAXE,CAWIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAbE,EAcFC,KAdE,CAcKC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAdb,CAAP;AAeH,CAhBM;AAkBP,OAAO,MAAMS,YAAY,GAAG,CAAClB,aAAD,EAAgBmB,QAAhB,KAA6B;AACrD,SAAOlB,KAAK,CAAE,mCAAF,EAAsC;AAC9CC,IAAAA,MAAM,EAAE,MADsC;AAE9CC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFqC;AAM9CU,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBG,MAAAA,QAAQ,EAAEA,QADO;AAEjBF,MAAAA,gBAAgB,EAAEjB;AAFD,KAAf;AANwC,GAAtC,CAAL,CAWFK,IAXE,CAWIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAbE,EAcFC,KAdE,CAcKC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAdb,CAAP;AAeH,CAhBM;AAkBP,OAAO,MAAMW,QAAQ,GAAIpB,aAAD,IAAmB;AACvC,SAAOC,KAAK,CAAE,qCAAoCD,aAAc,EAApD,EAAuD;AAC/DE,IAAAA,MAAM,EAAE,KADuD;AAE/DC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX;AAFsD,GAAvD,CAAL,CAOFC,IAPE,CAOIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GATE,EAUFC,KAVE,CAUKC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVb,CAAP;AAWH,CAZM","sourcesContent":["export const readNounce = (publicAddress) => {\n    return fetch(`http://localhost:4000/user/nounce/${publicAddress}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n    })\n        .then((response) => {\n            return response.json();\n        })\n        .catch((err) => console.log(err));\n};\n\nexport const userLogin = (publicAddress, sign) => {\n    return fetch(`http://localhost:4000/user/login`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            sign: sign,\n            metamask_address: publicAddress,\n        }),\n    })\n        .then((response) => {\n            return response.json();\n        })\n        .catch((err) => console.log(err));\n};\n\nexport const registerUser = (publicAddress, username) => {\n    return fetch(`http://localhost:4000/user/create`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            username: username,\n            metamask_address: publicAddress,\n        }),\n    })\n        .then((response) => {\n            return response.json();\n        })\n        .catch((err) => console.log(err));\n};\n\nexport const readUser = (publicAddress) => {\n    return fetch(`http://localhost:4000/user/nounce/${publicAddress}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n    })\n        .then((response) => {\n            return response.json();\n        })\n        .catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}