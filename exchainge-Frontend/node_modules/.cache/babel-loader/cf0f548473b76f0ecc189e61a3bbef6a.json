{"ast":null,"code":"var _jsxFileName = \"/Users/bob/codes/mobility-blockchain-frontend/src/component/TranscriptStatus.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from '@mui/material/Card';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport { CardContent, CardHeader, CardMedia, Grid } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@mui/material/Typography';\nimport Grow from '@mui/material/Grow';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport StepConnector, { stepConnectorClasses } from '@mui/material/StepConnector';\nimport IosShareIcon from '@mui/icons-material/IosShare';\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\nimport MarkEmailReadIcon from '@mui/icons-material/MarkEmailRead';\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\nimport StepLabel from '@mui/material/StepLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1),\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  cardStyle: {\n    marginTop: '2rem',\n    textAlign: 'center',\n    padding: '1.5rem',\n    color: 'inherit',\n    display: 'block',\n    width: '85%',\n    transitionDuration: 'color 0.15s ease',\n    position: 'relative'\n  },\n  cardHeader: {\n    width: 'auto',\n    textAlign: 'center',\n    padding: '5px'\n  },\n  cardFooter: {\n    width: '80%',\n    textAlign: 'center',\n    padding: '1.25rem',\n    border: '0',\n    borderRadius: '6px',\n    justifyContent: 'center !important'\n  },\n  cardRow: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    \"&:last-child\": {\n      paddingBottom: theme.spacing(1)\n    },\n    \"&:first-child\": {\n      paddingTop: theme.spacing(0)\n    }\n  },\n  cardButtons: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"2rem\"\n  }\n}));\nconst ColorlibConnector = styled(StepConnector)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`&.${stepConnectorClasses.alternativeLabel}`]: {\n      top: 22\n    },\n    [`&.${stepConnectorClasses.active}`]: {\n      [`& .${stepConnectorClasses.line}`]: {\n        backgroundImage: 'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)' //'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n\n      }\n    },\n    [`&.${stepConnectorClasses.completed}`]: {\n      [`& .${stepConnectorClasses.line}`]: {\n        backgroundImage: 'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)' //'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n\n      }\n    },\n    [`& .${stepConnectorClasses.line}`]: {\n      height: 3,\n      border: 0,\n      backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n      borderRadius: 1\n    }\n  };\n});\nconst ColorlibStepIconRoot = styled('div')(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    ...(ownerState.active && {\n      backgroundImage: 'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)',\n      boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n    }),\n    ...(ownerState.completed && {\n      backgroundImage: 'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)' //'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n\n    })\n  };\n});\n\nfunction ColorlibStepIcon(props) {\n  const {\n    active,\n    completed,\n    className\n  } = props;\n  const icons = {\n    1: /*#__PURE__*/_jsxDEV(IosShareIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 8\n    }, this),\n    2: /*#__PURE__*/_jsxDEV(DriveFileRenameOutlineIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 8\n    }, this),\n    3: /*#__PURE__*/_jsxDEV(MarkEmailReadIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 8\n    }, this),\n    4: /*#__PURE__*/_jsxDEV(DoneAllIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 8\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(ColorlibStepIconRoot, {\n    ownerState: {\n      completed,\n      active\n    },\n    className: className,\n    children: icons[String(props.icon)]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ColorlibStepIcon;\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   * @default false\n   */\n  active: PropTypes.bool,\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   * @default false\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node\n};\n\nconst TranscriptStatus = props => {\n  _s();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const classes = useStyles();\n\n  const handleStep = step => () => {\n    setActiveStep(step);\n  };\n\n  const data = [[{\n    pic: '/upload1.svg',\n    title: 'One',\n    body: '1st Body of the first card'\n  }, {\n    pic: '/blockchain-2853046_640.jpg',\n    title: 'Two',\n    body: '2nd Body of the second card'\n  }], [{\n    pic: '/blockchain-3277335_1280.png',\n    title: 'One',\n    body: '1st Body of the first card'\n  }, {\n    pic: '/blockchain-3750157_640.jpg',\n    title: 'Two',\n    body: '2nd Body of the second card'\n  }], [{\n    pic: '/upload1.svg',\n    title: 'One',\n    body: '1st Body of the first card'\n  }, {\n    pic: '/blockchain-2853046_640.jpg',\n    title: 'Two',\n    body: '2nd Body of the second card'\n  }], [{\n    pic: '/blockchain-3277335_1280.png',\n    title: 'One',\n    body: '1st Body of the first card'\n  }, {\n    pic: '/blockchain-3750157_640.jpg',\n    title: 'Two',\n    body: '2nd Body of the second card'\n  }]];\n\n  const isStepOptional = step => {\n    return step === 1;\n  };\n\n  const showFooter = (data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: activeStep === index ? '' : 'none'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: \"1\",\n      alignItems: \"center\",\n      className: classes.cardRow + \" \" + classes.cardButtons,\n      children: [/*#__PURE__*/_jsxDEV(Grow, {\n        in: activeStep === index,\n        ...(activeStep === index ? {\n          timeout: 500\n        } : {}),\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            width: '35%',\n            marginRight: '2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            alt: \"green iguana\",\n            height: \"140\",\n            image: data[0].pic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            collapseable: true,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"div\",\n              children: data[0].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: data[0].body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grow, {\n        in: activeStep === index,\n        ...(activeStep === index ? {\n          timeout: 1000\n        } : {}),\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            width: '35%',\n            marginLeft: '2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            alt: \"green iguana\",\n            height: \"140\",\n            image: data[1].pic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"div\",\n              children: data[1].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: data[1].body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n\n  const timeline = () => /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    className: classes.cardStyle,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      className: classes.cardHeader,\n      var: true,\n      title: \"Explore ExChainge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Stepper, {\n        alternativeLabel: true,\n        activeStep: activeStep,\n        connector: /*#__PURE__*/_jsxDEV(ColorlibConnector, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 67\n        }, this),\n        children: props.items.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n\n          if (isStepOptional(index)) {\n            labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: \"Optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(Step, {\n            onClick: handleStep(index),\n            ...stepProps,\n            children: /*#__PURE__*/_jsxDEV(StepLabel, {\n              StepIconComponent: ColorlibStepIcon,\n              children: label + index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"cardFooter\", {\n      children: [\" \", showFooter(data[activeStep], activeStep), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: timeline()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TranscriptStatus, \"15B3wFBagZpDWIGbpCRxtmpeGyg=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = TranscriptStatus;\nexport default TranscriptStatus;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColorlibStepIcon\");\n$RefreshReg$(_c2, \"TranscriptStatus\");","map":{"version":3,"sources":["/Users/bob/codes/mobility-blockchain-frontend/src/component/TranscriptStatus.js"],"names":["React","Card","Stepper","Step","CardContent","CardHeader","CardMedia","Grid","makeStyles","Typography","Grow","PropTypes","styled","StepConnector","stepConnectorClasses","IosShareIcon","DriveFileRenameOutlineIcon","MarkEmailReadIcon","DoneAllIcon","StepLabel","useStyles","theme","root","display","flexWrap","margin","spacing","textField","cardStyle","marginTop","textAlign","padding","color","width","transitionDuration","position","cardHeader","cardFooter","border","borderRadius","justifyContent","cardRow","paddingTop","paddingBottom","cardButtons","ColorlibConnector","alternativeLabel","top","active","line","backgroundImage","completed","height","backgroundColor","palette","mode","grey","ColorlibStepIconRoot","ownerState","zIndex","alignItems","boxShadow","ColorlibStepIcon","props","className","icons","String","icon","propTypes","bool","string","node","TranscriptStatus","activeStep","setActiveStep","useState","classes","handleStep","step","data","pic","title","body","isStepOptional","showFooter","index","timeout","marginRight","marginLeft","timeline","items","map","label","stepProps","labelProps","optional"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from '@mui/material/Card';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport { CardContent, CardHeader, CardMedia, Grid } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@mui/material/Typography';\nimport Grow from '@mui/material/Grow';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport StepConnector, { stepConnectorClasses } from '@mui/material/StepConnector';\nimport IosShareIcon from '@mui/icons-material/IosShare';\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\nimport MarkEmailReadIcon from '@mui/icons-material/MarkEmailRead';\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\nimport StepLabel from '@mui/material/StepLabel';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  cardStyle: {\n    marginTop: '2rem',\n    textAlign: 'center',\n    padding: '1.5rem',\n    color: 'inherit',\n    display: 'block',\n    width: '85%',\n    transitionDuration: 'color 0.15s ease',\n    position: 'relative',\n  },\n  cardHeader: {\n    width: 'auto',\n    textAlign: 'center',\n    padding: '5px',\n  },\n  cardFooter: {\n    width: '80%',\n    textAlign: 'center',\n    padding: '1.25rem',\n    border: '0',\n    borderRadius: '6px',\n    justifyContent: 'center !important',\n  },\n  cardRow: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n\n    \"&:last-child\": {\n      paddingBottom: theme.spacing(1),\n    },\n    \"&:first-child\": {\n      paddingTop: theme.spacing(0),\n    },\n  },\n  cardButtons: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"2rem\"\n  }\n}));\n\n\nconst ColorlibConnector = styled(StepConnector)(({ theme }) => ({\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\n    top: 22,\n  },\n  [`&.${stepConnectorClasses.active}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      backgroundImage:\n      'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)',  \n      //'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  [`&.${stepConnectorClasses.completed}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      backgroundImage:\n      'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)',  \n      //'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  [`& .${stepConnectorClasses.line}`]: {\n    height: 3,\n    border: 0,\n    backgroundColor:\n      theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n    borderRadius: 1,\n  },\n}));\n\nconst ColorlibStepIconRoot = styled('div')(({ theme, ownerState }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#ccc',\n  zIndex: 1,\n  color: '#fff',\n  width: 50,\n  height: 50,\n  display: 'flex',\n  borderRadius: '50%',\n  justifyContent: 'center',\n  alignItems: 'center',\n  ...(ownerState.active && {\n    backgroundImage:\n      'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  }),\n  ...(ownerState.completed && {\n    backgroundImage:'linear-gradient( 136deg, #07565e 0%, #097976 50%, #00d4ff 100%)',\n      //'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n  }),\n}));\n\nfunction ColorlibStepIcon(props) {\n  const { active, completed, className } = props;\n\n  const icons = {\n    1: <IosShareIcon />,\n    2: <DriveFileRenameOutlineIcon />,\n    3: <MarkEmailReadIcon />,\n    4: <DoneAllIcon/>,\n  };\n\n  return (\n    <ColorlibStepIconRoot ownerState={{ completed, active }} className={className}>\n      {icons[String(props.icon)]}\n    </ColorlibStepIconRoot>\n  );\n}\n\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   * @default false\n   */\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   * @default false\n   */\n  completed: PropTypes.bool,\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node,\n};\n\nconst TranscriptStatus = (props) => {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const classes = useStyles();\n\n  const handleStep = (step) => () => {\n    setActiveStep(step);\n  };\n  const data = [\n    [{\n      pic: '/upload1.svg',\n      title: 'One',\n      body: '1st Body of the first card'\n    }, {\n      pic: '/blockchain-2853046_640.jpg',\n      title: 'Two',\n      body: '2nd Body of the second card'\n    }],\n    [{\n      pic: '/blockchain-3277335_1280.png',\n      title: 'One',\n      body: '1st Body of the first card'\n    }, {\n      pic: '/blockchain-3750157_640.jpg',\n      title: 'Two',\n      body: '2nd Body of the second card'\n    }],\n    [{\n      pic: '/upload1.svg',\n      title: 'One',\n      body: '1st Body of the first card'\n    }, {\n      pic: '/blockchain-2853046_640.jpg',\n      title: 'Two',\n      body: '2nd Body of the second card'\n    }],\n    [{\n      pic: '/blockchain-3277335_1280.png',\n      title: 'One',\n      body: '1st Body of the first card'\n    }, {\n      pic: '/blockchain-3750157_640.jpg',\n      title: 'Two',\n      body: '2nd Body of the second card'\n    }]\n  ]\n  const isStepOptional = (step) => {\n    return step === 1;\n  };\n\n\n  const showFooter = (data, index) => (\n    <div style={{ display: activeStep === index ? '' : 'none' }}>\n      <Grid container spacing=\"1\" alignItems=\"center\" className={classes.cardRow + \" \" + classes.cardButtons} >\n        <Grow in={activeStep === index} {...(activeStep === index ? { timeout: 500 } : {})}>\n          <Card sx={{ width: '35%', marginRight:'2rem' }}>\n            <CardMedia\n              component=\"img\"\n              alt=\"green iguana\"\n              height=\"140\"\n              image={data[0].pic}\n            />\n            <CardContent collapseable >\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {data[0].title}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {data[0].body}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grow>\n        <Grow in={activeStep === index} {...(activeStep === index ? { timeout: 1000 } : {})}>\n          <Card sx={{ width: '35%', marginLeft:'2rem' }}>\n            <CardMedia\n              component=\"img\"\n              alt=\"green iguana\"\n              height=\"140\"\n              image={data[1].pic}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {data[1].title}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {data[1].body}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grow>\n\n      </Grid>\n    </div>\n  );\n\n\n  const timeline = () => (\n    <Card variant=\"outlined\" className={classes.cardStyle}>\n      <CardHeader className={classes.cardHeader} var title='Explore ExChainge' />\n      <CardContent >\n    <Stepper  alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n        {props.items.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = (\n              <Typography variant=\"caption\">Optional</Typography>\n            );\n          }\n          return(\n            <Step onClick={handleStep(index)} key={label} {...stepProps}>\n              <StepLabel StepIconComponent={ColorlibStepIcon}>{label+index}</StepLabel>\n            </Step>\n          )\n        })}\n      </Stepper>\n      </CardContent>\n      <br />\n      <cardFooter> {showFooter(data[activeStep], activeStep)} </cardFooter>\n    </Card>\n  )\n\n  return (\n    <React.Fragment>\n      <center>\n        {timeline()}\n      </center></React.Fragment>\n  )\n}\n\nexport default TranscriptStatus;"]},"metadata":{},"sourceType":"module"}